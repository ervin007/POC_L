page_title,page_url,content
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"^^^What is Amazon EC2?^^^ Amazon Elastic Compute Cloud (Amazon EC2) provides on-demand, scalable computing capacity in the Amazon Web Services (AWS) Cloud. Using Amazon EC2 reduces hardware costs so you can develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few virtual servers as you need, configure security and networking, and manage storage. You can add capacity (scale up) to handle compute-heavy tasks, such as monthly or yearly processes, or spikes in website traffic. When usage decreases, you can reduce capacity (scale down) again. The following diagram shows a basic architecture of an Amazon EC2 instance deployed within an Amazon Virtual Private Cloud (VPC) In this example, the EC2 instance is within an Availability Zone in the Region. The EC2 instance is secured with a security group, which is a virtual firewall that controls incoming and outgoing traffic."
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"A private key is stored on the local computer and a public key is stored on the instance. Both keys are specified as a key pair to prove the identity of the user. In this scenario, the instance is backed by an Amazon EBS volume. The VPC communicates with the internet using an internet gateway. For more information about Amazon VPC, see the Amazon VPC User Guide. This user guide provides information specific to running Linux-based instances on Amazon EC2 See the EC2 User Guide for Windows Instances for information to help you run Windows-based instances on EC2 Amazon EC2 supports the processing, storage, and transmission of credit card data by a merchant or service provider, and has been validated as being compliant with Payment Card Industry (PCI) Data Security Standard (DSS) For more information about PCI DSS, including how to request a copy of the AWS PCI Compliance Package, see PCI DSS Level 1"
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"If you are looking for technical guidance about Amazon EC2, try AWS re:Post. For more information about cloud computing, see What is cloud computing? ^^Features of Amazon EC2^^ Amazon EC2 provides the following high-level features: Virtual servers. Preconfigured templates for your instances that package the components you need for your server (including the operating system and additional software) Various configurations of CPU, memory, storage, networking capacity, and graphics hardware for your instances. Secure login information for your instances. AWS stores the public key and you store the private key in a secure place. Storage volumes for temporary data that is deleted when you stop, hibernate, or terminate your instance. Persistent storage volumes for your data using Amazon Elastic Block Store (Amazon EBS) Multiple physical locations for your resources, such as instances and Amazon EBS volumes."
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"A virtual firewall that allows you to specify the protocols, ports, and source IP ranges that can reach your instances, and the destination IP ranges to which your instances can connect. Static IPv4 addresses for dynamic cloud computing. Metadata that you can create and assign to your Amazon EC2 resources. Virtual networks you can create that are logically isolated from the rest of the AWS Cloud. You can optionally connect these virtual networks to your own network. For details about all of the features of Amazon EC2, see Amazon EC2 features. For options to run your website on AWS, see Web Hosting. ^^Get started with Amazon EC2^^ The following topics can help you get started with Amazon EC2 After you set up to use EC2, you can walk through Tutorial: Get started with Amazon EC2 Linux instances to launch, connect to, and clean up an instance. The remaining topics point to more information about the high-level features of EC2 Set up to use Amazon EC2"
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"Tutorial: Get started with Amazon EC2 Linux instances. Connect to your Linux instance. Transfer files. Instances and AMIs. Regions and Zones. Instance types. Tags. Key pairs. Security groups. Elastic IP addresses. Virtual private clouds. Amazon EBS. Instance store. Remotely Run Commands on an EC2 Instance with AWS Systems Manager. Install LAMP on Amazon Linux 2023 Configure SSL/TLS on Amazon Linux 2023 Host a WordPress blog. Troubleshoot EC2 instances. AWS re:Post. ^^Related services^^ You can provision Amazon EC2 resources, such as instances and volumes, directly using Amazon EC2 In addition, you can provision EC2 resources using other AWS services, such as the following: Amazon EC2 Auto Scaling. Helps ensure you have the correct number of Amazon EC2 instances available to handle the load for your application. AWS CloudFormation. Helps you model and set up your AWS resources using templates. AWS Elastic Beanstalk."
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"Deploy and manage applications in the AWS Cloud without having to understand the underlying infrastructure. AWS OpsWorks. Automate how servers are configured, deployed, and managed across your Amazon EC2 instances using Chef and Puppet. EC2 Image Builder. Automate the creation, management, and deployment of customized, secure, and up-to-date server images. AWS Launch Wizard. Size, configure, and deploy AWS resources for third-party applications without having to manually identify and provision individual AWS resources. Amazon Lightsail. To build websites or web applications, you can deploy and manage basic cloud resources using Amazon Lightsail. To compare the features of Amazon EC2 and Lightsail for your use case, see Amazon Lightsail or Amazon EC2 Elastic Load Balancing. Automatically distribute incoming application traffic across multiple instances. Amazon Relational Database Service (Amazon RDS) Set up, operate, and scale a managed relational database in the cloud."
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"Although you can set up a database on an EC2 instance, Amazon RDS offers the advantage of handling your database management tasks, such as patching the software, backing up, and storing the backups. Amazon Elastic Container Service (Amazon ECS) Deploy, manage, and scale containerized applications on a cluster of EC2 instances. Amazon CloudWatch. Monitor your instances and Amazon EBS volumes. Amazon GuardDuty. Detect potentially unauthorized or malicious use of your EC2 instances. AWS Backup. Automate backing up your Amazon EC2 instances and the Amazon EBS volumes attached to them. ^^Access Amazon EC2^^ You can create and manage your Amazon EC2 instances using the following interfaces: A simple web interface to create and manage Amazon EC2 instances and resources. If you've signed up for an AWS account, you can access the Amazon EC2 console by signing into the AWS Management Console and selecting EC2 from the console home page."
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"Enables you to interact with AWS services using commands in your command-line shell. It is supported on Windows, Mac, and Linux. For more information about the AWS CLI , see AWS Command Line Interface User Guide. You can find the Amazon EC2 commands in the AWS CLI Command Reference. A set of PowerShell modules that are built on the functionality exposed by the AWS SDK for .NET. The Tools for PowerShell enable you to script operations on your AWS resources from the PowerShell command line. To get started, see the AWS Tools for Windows PowerShell User Guide. You can find the cmdlets for Amazon EC2, in the AWS Tools for PowerShell Cmdlet Reference. Amazon EC2 supports creating resources using AWS CloudFormation. You create a template, in JSON or YAML format, that describes your AWS resources, and AWS CloudFormation provisions and configures those resources for you."
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"You can reuse your CloudFormation templates to provision the same resources multiple times, whether in the same Region and account or in multiple Regions and accounts. For more information about supported resource types and properties for Amazon EC2, see EC2 resource type reference in the AWS CloudFormation User Guide. Amazon EC2 provides a Query API. These requests are HTTP or HTTPS requests that use the HTTP verbs GET or POST and a Query parameter named Action. For more information about the API actions for Amazon EC2, see Actions in the Amazon EC2 API Reference. If you prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS, AWS provides libraries, sample code, tutorials, and other resources for software developers. These libraries provide basic functions that automate tasks such as cryptographically signing your requests, retrying requests, and handling error responses, making it easier for you to get started. For more information, see Tools to Build on AWS. ^^Pricing for Amazon EC2^^"
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"Amazon EC2 provides the following pricing options: You can get started with Amazon EC2 for free. To explore the Free Tier options, see AWS Free Tier. Pay for the instances that you use by the second, with a minimum of 60 seconds, with no long-term commitments or upfront payments. You can reduce your Amazon EC2 costs by making a commitment to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years. You can reduce your Amazon EC2 costs by making a commitment to a specific instance configuration, including instance type and Region, for a term of 1 or 3 years. Request unused EC2 instances, which can reduce your Amazon EC2 costs significantly. Reduce costs by using a physical EC2 server that is fully dedicated for your use, either On-Demand or as part of a Savings Plan. You can use your existing server-bound software licenses and get help meeting compliance requirements."
AWS \ Amazon EC2 \ User Guide for Linux Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html,"Reserve compute capacity for your EC2 instances in a specific Availability Zone for any duration of time. Removes the cost of unused minutes and seconds from your bill. For a complete list of charges and prices for Amazon EC2 and more information about the purchase models, see Amazon EC2 pricing. ^Estimates, billing, and cost optimization^ To create estimates for your AWS use cases, use the AWS Pricing Calculator. To see your bill, go to the Billing and Cost Management Dashboard in the AWS Billing and Cost Management console. Your bill contains links to usage reports that provide details about your bill. To learn more about AWS account billing, see AWS Billing and Cost Management User Guide. If you have questions concerning AWS billing, accounts, and events, contact AWS Support. To calculate the cost of a sample provisioned environment, see Cloud Economics Center. When calculating the cost of a provisioned environment, remember to include incidental costs such as snapshot storage for EBS volumes.You can optimize the cost, security, and performance of your AWS environment using AWS Trusted Advisor."
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"^^^What is Amazon EC2?^^^ Amazon Elastic Compute Cloud (Amazon EC2) provides on-demand, scalable computing capacity in the Amazon Web Services (AWS) Cloud. Using Amazon EC2 reduces hardware costs so you can develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few virtual servers as you need, configure security and networking, and manage storage. You can add capacity (scale up) to handle compute-heavy tasks, such as monthly or yearly processes, or spikes in website traffic. When usage decreases, you can reduce capacity (scale down) again. The following diagram shows a basic architecture of an Amazon EC2 instance deployed within an Amazon Virtual Private Cloud (VPC) In this example, the EC2 instance is within an Availability Zone in the Region. The EC2 instance is secured with a security group, which is a virtual firewall that controls incoming and outgoing traffic."
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"A private key is stored on the local computer and a public key is stored on the instance. Both keys are specified as a key pair to prove the identity of the user. In this scenario, the instance is backed by an Amazon EBS volume. The VPC communicates with the internet using an internet gateway. For more information about Amazon VPC, see the Amazon VPC User Guide. This user guide provides information specific to running Windows-based instances on Amazon EC2 See the EC2 User Guide for Linux Instances for information to help you run Linux-based instances on EC2 Amazon EC2 supports the processing, storage, and transmission of credit card data by a merchant or service provider, and has been validated as being compliant with Payment Card Industry (PCI) Data Security Standard (DSS) For more information about PCI DSS, including how to request a copy of the AWS PCI Compliance Package, see PCI DSS Level 1"
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"If you are looking for technical guidance about Amazon EC2, try AWS re:Post. For more information about cloud computing, see What is cloud computing? ^^Features of Amazon EC2^^ Amazon EC2 provides the following high-level features: Virtual servers. Preconfigured templates for your instances that package the components you need for your server (including the operating system and additional software) Various configurations of CPU, memory, storage, networking capacity, and graphics hardware for your instances. Secure login information for your instances. AWS stores the public key and you store the private key in a secure place. Storage volumes for temporary data that is deleted when you stop, hibernate, or terminate your instance. Persistent storage volumes for your data using Amazon Elastic Block Store (Amazon EBS) Multiple physical locations for your resources, such as instances and Amazon EBS volumes."
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"A virtual firewall that allows you to specify the protocols, ports, and source IP ranges that can reach your instances, and the destination IP ranges to which your instances can connect. Static IPv4 addresses for dynamic cloud computing. Metadata that you can create and assign to your Amazon EC2 resources. Virtual networks you can create that are logically isolated from the rest of the AWS Cloud. You can optionally connect these virtual networks to your own network. For details about all of the features of Amazon EC2, see Amazon EC2 features. Windows-specific features and use case information can be found at Windows Server on AWS. For options to run your website on AWS, see Web Hosting. ^^Get started with Amazon EC2^^ The following topics can help you get started with Amazon EC2 After you set up to use EC2, you can walk through Tutorial: Get started with Amazon EC2 Windows instances to launch, connect to, and clean up an instance."
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"The remaining topics point to more information about the high-level features of EC2 Set up to use Amazon EC2 Tutorial: Get started with Amazon EC2 Windows instances. Connect to your Windows instance. Transfer files to Windows instances. Amazon EC2 Windows instances. Instance types. Tags. Key pairs. Security groups. Elastic IP addresses. Virtual private clouds. Amazon EBS. Instance store. AWS Systems Manager Run Command in the AWS Systems Manager User Guide. Tutorial: Get started with Amazon EC2 Windows instances. Troubleshoot EC2 Windows instances. AWS re:Post. ^^Related services^^ You can provision Amazon EC2 resources, such as instances and volumes, directly using Amazon EC2 In addition, you can provision EC2 resources using other AWS services, such as the following: Amazon EC2 Auto Scaling. Helps ensure you have the correct number of Amazon EC2 instances available to handle the load for your application. AWS CloudFormation. Helps you model and set up your AWS resources using templates."
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"AWS Elastic Beanstalk. Deploy and manage applications in the AWS Cloud without having to understand the underlying infrastructure. AWS OpsWorks. Automate how servers are configured, deployed, and managed across your Amazon EC2 instances using Chef and Puppet. EC2 Image Builder. Automate the creation, management, and deployment of customized, secure, and up-to-date server images. AWS Launch Wizard. Size, configure, and deploy AWS resources for third-party applications without having to manually identify and provision individual AWS resources. Amazon Lightsail. To build websites or web applications, you can deploy and manage basic cloud resources using Amazon Lightsail. To compare the features of Amazon EC2 and Lightsail for your use case, see Amazon Lightsail or Amazon EC2 Elastic Load Balancing. Automatically distribute incoming application traffic across multiple instances. Amazon Relational Database Service (Amazon RDS) Set up, operate, and scale a managed relational database in the cloud."
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"Although you can set up a database on an EC2 instance, Amazon RDS offers the advantage of handling your database management tasks, such as patching the software, backing up, and storing the backups. Amazon Elastic Container Service (Amazon ECS) Deploy, manage, and scale containerized applications on a cluster of EC2 instances. Amazon CloudWatch. Monitor your instances and Amazon EBS volumes. Amazon GuardDuty. Detect potentially unauthorized or malicious use of your EC2 instances. AWS Backup. Automate backing up your Amazon EC2 instances and the Amazon EBS volumes attached to them. ^^Access Amazon EC2^^ You can create and manage your Amazon EC2 instances using the following interfaces: A simple web interface to create and manage Amazon EC2 instances and resources. If you've signed up for an AWS account, you can access the Amazon EC2 console by signing into the AWS Management Console and selecting EC2 from the console home page."
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"Enables you to interact with AWS services using commands in your command-line shell. It is supported on Windows, Mac, and Linux. For more information about the AWS CLI , see AWS Command Line Interface User Guide. You can find the Amazon EC2 commands in the AWS CLI Command Reference. A set of PowerShell modules that are built on the functionality exposed by the AWS SDK for .NET. The Tools for PowerShell enable you to script operations on your AWS resources from the PowerShell command line. To get started, see the AWS Tools for Windows PowerShell User Guide. You can find the cmdlets for Amazon EC2, in the AWS Tools for PowerShell Cmdlet Reference. Amazon EC2 supports creating resources using AWS CloudFormation. You create a template, in JSON or YAML format, that describes your AWS resources, and AWS CloudFormation provisions and configures those resources for you."
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"You can reuse your CloudFormation templates to provision the same resources multiple times, whether in the same Region and account or in multiple Regions and accounts. For more information about supported resource types and properties for Amazon EC2, see EC2 resource type reference in the AWS CloudFormation User Guide. Amazon EC2 provides a Query API. These requests are HTTP or HTTPS requests that use the HTTP verbs GET or POST and a Query parameter named Action. For more information about the API actions for Amazon EC2, see Actions in the Amazon EC2 API Reference. If you prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS, AWS provides libraries, sample code, tutorials, and other resources for software developers. These libraries provide basic functions that automate tasks such as cryptographically signing your requests, retrying requests, and handling error responses, making it easier for you to get started. For more information, see Tools to Build on AWS. ^^Pricing for Amazon EC2^^"
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"Amazon EC2 provides the following pricing options: You can get started with Amazon EC2 for free. To explore the Free Tier options, see AWS Free Tier. Pay for the instances that you use by the second, with a minimum of 60 seconds, with no long-term commitments or upfront payments. You can reduce your Amazon EC2 costs by making a commitment to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years. You can reduce your Amazon EC2 costs by making a commitment to a specific instance configuration, including instance type and Region, for a term of 1 or 3 years. Request unused EC2 instances, which can reduce your Amazon EC2 costs significantly. Reduce costs by using a physical EC2 server that is fully dedicated for your use, either On-Demand or as part of a Savings Plan. You can use your existing server-bound software licenses and get help meeting compliance requirements."
AWS \ Amazon EC2 \ User Guide for Windows Instances \ What is Amazon EC2?,https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/index.html,"Reserve compute capacity for your EC2 instances in a specific Availability Zone for any duration of time. Removes the cost of unused minutes and seconds from your bill. For a complete list of charges and prices for Amazon EC2 and more information about the purchase models, see Amazon EC2 pricing. ^Estimates, billing, and cost optimization^ To create estimates for your AWS use cases, use the AWS Pricing Calculator. To estimate the cost of transforming Microsoft workloads to a modern architecture that uses open source and cloud-native services deployed on AWS, use the AWS Modernization Calculator for Microsoft Workloads. To see your bill, go to the Billing and Cost Management Dashboard in the AWS Billing and Cost Management console. Your bill contains links to usage reports that provide details about your bill. To learn more about AWS account billing, see AWS Billing and Cost Management User Guide. If you have questions concerning AWS billing, accounts, and events, contact AWS Support.To calculate the cost of a sample provisioned environment, see Cloud Economics Center. When calculating the cost of a provisioned environment, remember to include incidental costs such as snapshot storage for EBS volumes. You can optimize the cost, security, and performance of your AWS environment using AWS Trusted Advisor."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"^^^What is Amazon S3?^^^ Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance. Customers of all sizes and industries can use Amazon S3 to store and protect any amount of data for a range of use cases, such as data lakes, websites, mobile applications, backup and restore, archive, enterprise applications, IoT devices, and big data analytics. Amazon S3 provides management features so that you can optimize, organize, and configure access to your data to meet your specific business, organizational, and compliance requirements. ^^Features of Amazon S3^^ ^Storage classes^ Amazon S3 offers a range of storage classes designed for different use cases."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"For example, you can store mission-critical production data in S3 Standard for frequent access, save costs by storing infrequently accessed data in S3 Standard-IA or S3 One Zone-IA, and archive data at the lowest costs in S3 Glacier Instant Retrieval, S3 Glacier Flexible Retrieval, and S3 Glacier Deep Archive. You can store data with changing or unknown access patterns in S3 Intelligent-Tiering, which optimizes storage costs by automatically moving your data between four access tiers when your access patterns change. These four access tiers include two low-latency access tiers optimized for frequent and infrequent access, and two opt-in archive access tiers designed for asynchronous access for rarely accessed data. For more information, see Using Amazon S3 storage classes. For more information about S3 Glacier Flexible Retrieval, see the Amazon S3 Glacier Developer Guide. ^Storage management^"
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"Amazon S3 has storage management features that you can use to manage costs, meet regulatory requirements, reduce latency, and save multiple distinct copies of your data for compliance requirements. S3 Lifecycle – Configure a lifecycle configuration to manage your objects and store them cost effectively throughout their lifecycle. You can transition objects to other S3 storage classes or expire objects that reach the end of their lifetimes. S3 Object Lock – Prevent Amazon S3 objects from being deleted or overwritten for a fixed amount of time or indefinitely. You can use Object Lock to help meet regulatory requirements that require write-once-read-many (WORM) storage or to simply add another layer of protection against object changes and deletions. S3 Replication – Replicate objects and their respective metadata and object tags to one or more destination buckets in the same or different AWS Regions for reduced latency, compliance, security, and other use cases."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"S3 Batch Operations – Manage billions of objects at scale with a single S3 API request or a few clicks in the Amazon S3 console. You can use Batch Operations to perform operations such as Copy, Invoke AWS Lambda function, and Restore on millions or billions of objects. ^Access management and security^ Amazon S3 provides features for auditing and managing access to your buckets and objects. By default, S3 buckets and the objects in them are private. You have access only to the S3 resources that you create. To grant granular resource permissions that support your specific use case or to audit the permissions of your Amazon S3 resources, you can use the following features. S3 Block Public Access – Block public access to S3 buckets and objects. By default, Block Public Access settings are turned on at the bucket level. We recommend that you keep all Block Public Access settings enabled unless you know that you need to turn off one or more of them for your specific use case."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"For more information, see Configuring block public access settings for your S3 buckets. AWS Identity and Access Management (IAM) – IAM is a web service that helps you securely control access to AWS resources, including your Amazon S3 resources. With IAM, you can centrally manage permissions that control which AWS resources users can access. You use IAM to control who is authenticated (signed in) and authorized (has permissions) to use resources. Bucket policies – Use IAM-based policy language to configure resource-based permissions for your S3 buckets and the objects in them. Amazon S3 access points – Configure named network endpoints with dedicated access policies to manage data access at scale for shared datasets in Amazon S3 Access control lists (ACLs) – Grant read and write permissions for individual buckets and objects to authorized users. As a general rule, we recommend using S3 resource-based policies (bucket policies and access point policies) or IAM user policies for access control instead of ACLs."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"Policies are a simplified and more flexible access control option. With bucket policies and access point policies, you can define rules that apply broadly across all requests to your Amazon S3 resources. For more information about the specific cases when you'd use ACLs instead of resource-based policies or IAM user policies, see Access policy guidelines. S3 Object Ownership – Take ownership of every object in your bucket, simplifying access management for data stored in Amazon S3 S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to disable or enable ACLs. By default, ACLs are disabled. With ACLs disabled, the bucket owner owns all the objects in the bucket and manages access to data exclusively by using access-management policies. IAM Access Analyzer for S3 – Evaluate and monitor your S3 bucket access policies, ensuring that the policies provide only the intended access to your S3 resources. ^Data processing^"
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"To transform data and trigger workflows to automate a variety of other processing activities at scale, you can use the following features. S3 Object Lambda – Add your own code to S3 GET, HEAD, and LIST requests to modify and process data as it is returned to an application. Filter rows, dynamically resize images, redact confidential data, and much more. Event notifications – Trigger workflows that use Amazon Simple Notification Service (Amazon SNS), Amazon Simple Queue Service (Amazon SQS), and AWS Lambda when a change is made to your S3 resources. ^Storage logging and monitoring^ Amazon S3 provides logging and monitoring tools that you can use to monitor and control how your Amazon S3 resources are being used. For more information, see Monitoring tools. Amazon CloudWatch metrics for Amazon S3 – Track the operational health of your S3 resources and configure billing alerts when estimated charges reach a user-defined threshold."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"AWS CloudTrail – Record actions taken by a user, a role, or an AWS service in Amazon S3 CloudTrail logs provide you with detailed API tracking for S3 bucket-level and object-level operations. Server access logging – Get detailed records for the requests that are made to a bucket. You can use server access logs for many use cases, such as conducting security and access audits, learning about your customer base, and understanding your Amazon S3 bill. AWS Trusted Advisor – Evaluate your account by using AWS best practice checks to identify ways to optimize your AWS infrastructure, improve security and performance, reduce costs, and monitor service quotas. You can then follow the recommendations to optimize your services and resources. ^Analytics and insights^ Amazon S3 offers features to help you gain visibility into your storage usage, which empowers you to better understand, analyze, and optimize your storage at scale. Amazon S3 Storage Lens – Understand, analyze, and optimize your storage."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"S3 Storage Lens provides 60+ usage and activity metrics and interactive dashboards to aggregate data for your entire organization, specific accounts, AWS Regions, buckets, or prefixes. Storage Class Analysis – Analyze storage access patterns to decide when it's time to move data to a more cost-effective storage class. S3 Inventory with Inventory reports – Audit and report on objects and their corresponding metadata and configure other Amazon S3 features to take action in Inventory reports. For example, you can report on the replication and encryption status of your objects. For a list of all the metadata available for each object in Inventory reports, see Amazon S3 Inventory list. ^Strong consistency^ Amazon S3 provides strong read-after-write consistency for PUT and DELETE requests of objects in your Amazon S3 bucket in all AWS Regions. This behavior applies to both writes of new objects as well as PUT requests that overwrite existing objects and DELETE requests."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"In addition, read operations on Amazon S3 Select, Amazon S3 access control lists (ACLs), Amazon S3 Object Tags, and object metadata (for example, the HEAD object) are strongly consistent. For more information, see Amazon S3 data consistency model. ^^How Amazon S3 works^^ Amazon S3 is an object storage service that stores data as objects within buckets. An object is a file and any metadata that describes the file. A bucket is a container for objects. To store your data in Amazon S3, you first create a bucket and specify a bucket name and AWS Region. Then, you upload your data to that bucket as objects in Amazon S3 Each object has a key (or key name), which is the unique identifier for the object within the bucket. S3 provides features that you can configure to support your specific use case."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"For example, you can use S3 Versioning to keep multiple versions of an object in the same bucket, which allows you to restore objects that are accidentally deleted or overwritten. Buckets and the objects in them are private and can be accessed only if you explicitly grant access permissions. You can use bucket policies, AWS Identity and Access Management (IAM) policies, access control lists (ACLs), and S3 Access Points to manage access. ^Buckets^ A bucket is a container for objects stored in Amazon S3 You can store any number of objects in a bucket and can have up to 100 buckets in your account. To request an increase, visit the Service Quotas console. Every object is contained in a bucket."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"For example, if the object named photos/puppy.jpg is stored in the DOC-EXAMPLE-BUCKET bucket in the US West (Oregon) Region, then it is addressable by using the URL https://DOC-EXAMPLE-BUCKET.s3.us-west-2.amazonaws.com/photos/puppy.jpg. For more information, see Accessing a Bucket. When you create a bucket, you enter a bucket name and choose the AWS Region where the bucket will reside. After you create a bucket, you cannot change the name of the bucket or its Region. Bucket names must follow the bucket naming rules. You can also configure a bucket to use S3 Versioning or other storage management features. Buckets also: Organize the Amazon S3 namespace at the highest level. Identify the account responsible for storage and data transfer charges. Provide access control options, such as bucket policies, access control lists (ACLs), and S3 Access Points, that you can use to manage access to your Amazon S3 resources."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"Serve as the unit of aggregation for usage reporting. For more information about buckets, see Buckets overview. ^Objects^ Objects are the fundamental entities stored in Amazon S3 Objects consist of object data and metadata. The metadata is a set of name-value pairs that describe the object. These pairs include some default metadata, such as the date last modified, and standard HTTP metadata, such as Content-Type. You can also specify custom metadata at the time that the object is stored. An object is uniquely identified within a bucket by a key (name) and a version ID (if S3 Versioning is enabled on the bucket) For more information about objects, see Amazon S3 objects overview. ^Keys^ An object key (or key name) is the unique identifier for an object within a bucket. Every object in a bucket has exactly one key."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"The combination of a bucket, object key, and optionally, version ID (if S3 Versioning is enabled for the bucket) uniquely identify each object. So you can think of Amazon S3 as a basic data map between ""bucket + key + version"" and the object itself. Every object in Amazon S3 can be uniquely addressed through the combination of the web service endpoint, bucket name, key, and optionally, a version. For example, in the URL https://DOC-EXAMPLE-BUCKET.s3.us-west-2.amazonaws.com/photos/puppy.jpg, DOC-EXAMPLE-BUCKET is the name of the bucket and photos/puppy.jpg is the key. For more information about object keys, see Creating object key names. ^S3 Versioning^ You can use S3 Versioning to keep multiple variants of an object in the same bucket. With S3 Versioning, you can preserve, retrieve, and restore every version of every object stored in your buckets."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"You can easily recover from both unintended user actions and application failures. For more information, see Using versioning in S3 buckets. ^Version ID^ When you enable S3 Versioning in a bucket, Amazon S3 generates a unique version ID for each object added to the bucket. Objects that already existed in the bucket at the time that you enable versioning have a version ID of null. If you modify these (or any other) objects with other operations, such as CopyObject and PutObject, the new objects get a unique version ID. For more information, see Using versioning in S3 buckets. ^Bucket policy^ A bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that you can use to grant access permissions to your bucket and the objects in it. Only the bucket owner can associate a policy with a bucket. The permissions attached to the bucket apply to all of the objects in the bucket that are owned by the bucket owner."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"Bucket policies are limited to 20 KB in size. Bucket policies use JSON-based access policy language that is standard across AWS. You can use bucket policies to add or deny permissions for the objects in a bucket. Bucket policies allow or deny requests based on the elements in the policy, including the requester, S3 actions, resources, and aspects or conditions of the request (for example, the IP address used to make the request) For example, you can create a bucket policy that grants cross-account permissions to upload objects to an S3 bucket while ensuring that the bucket owner has full control of the uploaded objects. For more information, see Bucket policy examples. In your bucket policy, you can use wildcard characters on Amazon Resource Names (ARNs) and other values to grant permissions to a subset of objects. For example, you can control access to groups of objects that begin with a common prefix or end with a given extension, such as .html. ^S3 Access Points^"
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"Amazon S3 Access Points are named network endpoints with dedicated access policies that describe how data can be accessed using that endpoint. Access Points are attached to buckets that you can use to perform S3 object operations, such as GetObject and PutObject. Access Points simplify managing data access at scale for shared datasets in Amazon S3 Each access point has its own access point policy. You can configure Block Public Access settings for each access point. To restrict Amazon S3 data access to a private network, you can also configure any access point to accept requests only from a virtual private cloud (VPC) For more information, see Managing data access with Amazon S3 access points. ^Access control lists (ACLs)^ You can use ACLs to grant read and write permissions to authorized users for individual buckets and objects. Each bucket and object has an ACL attached to it as a subresource. The ACL defines which AWS accounts or groups are granted access and the type of access."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"ACLs are an access control mechanism that predates IAM. For more information about ACLs, see Access control list (ACL) overview. S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to both control ownership of the objects that are uploaded to your bucket and to disable or enable ACLs. By default, Object Ownership is set to the bucket owner enforced setting, and all ACLs are disabled. When ACLs are disabled, the bucket owner owns all the objects in the bucket and manages access to them exclusively by using access-management policies. A majority of modern use cases in Amazon S3 no longer require the use of ACLs. We recommend that you keep ACLs disabled, except in unusual circumstances where you need to control access for each object individually. With ACLs disabled, you can use policies to control access to all objects in your bucket, regardless of who uploaded the objects to your bucket."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"For more information, see Controlling ownership of objects and disabling ACLs for your bucket. ^Regions^ You can choose the geographical AWS Region where Amazon S3 stores the buckets that you create. You might choose a Region to optimize latency, minimize costs, or address regulatory requirements. Objects stored in an AWS Region never leave the Region unless you explicitly transfer or replicate them to another Region. For example, objects stored in the Europe (Ireland) Region never leave it. You can access Amazon S3 and its features only in the AWS Regions that are enabled for your account. For more information about enabling a Region to create and manage AWS resources, see Managing AWS Regions in the AWS General Reference. For a list of Amazon S3 Regions and endpoints, see Regions and endpoints in the AWS General Reference. ^^Amazon S3 data consistency model^^ Amazon S3 provides strong read-after-write consistency for PUT and DELETE requests of objects in your Amazon S3 bucket in all AWS Regions."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"This behavior applies to both writes to new objects as well as PUT requests that overwrite existing objects and DELETE requests. In addition, read operations on Amazon S3 Select, Amazon S3 access controls lists (ACLs), Amazon S3 Object Tags, and object metadata (for example, the HEAD object) are strongly consistent. Updates to a single key are atomic. For example, if you make a PUT request to an existing key from one thread and perform a GET request on the same key from a second thread concurrently, you will get either the old data or the new data, but never partial or corrupt data. Amazon S3 achieves high availability by replicating data across multiple servers within AWS data centers. If a PUT request is successful, your data is safely stored. Any read (GET or LIST request) that is initiated following the receipt of a successful PUT response will return the data written by the PUT request. Here are examples of this behavior:"
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"A process writes a new object to Amazon S3 and immediately lists keys within its bucket. The new object appears in the list. A process replaces an existing object and immediately tries to read it. Amazon S3 returns the new data. A process deletes an existing object and immediately tries to read it. Amazon S3 does not return any data because the object has been deleted. A process deletes an existing object and immediately lists keys within its bucket. The object does not appear in the listing. Amazon S3 does not support object locking for concurrent writers. If two PUT requests are simultaneously made to the same key, the request with the latest timestamp wins. If this is an issue, you must build an object-locking mechanism into your application. Updates are key-based. There is no way to make atomic updates across keys. For example, you cannot make the update of one key dependent on the update of another key unless you design this functionality into your application. Bucket configurations have an eventual consistency model."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"Specifically, this means that: If you delete a bucket and immediately list all buckets, the deleted bucket might still appear in the list. If you enable versioning on a bucket for the first time, it might take a short amount of time for the change to be fully propagated. We recommend that you wait for 15 minutes after enabling versioning before issuing write operations (PUT or DELETE requests) on objects in the bucket. ^Concurrent applications^ This section provides examples of behavior to be expected from Amazon S3 when multiple clients are writing to the same items. In this example, both W1 (write 1) and W2 (write 2) finish before the start of R1 (read 1) and R2 (read 2) Because S3 is strongly consistent, R1 and R2 both return color = ruby. In the next example, W2 does not finish before the start of R1"
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"Therefore, R1 might return color = ruby or color = garnet. However, because W1 and W2 finish before the start of R2, R2 returns color = garnet. In the last example, W2 begins before W1 has received an acknowledgment. Therefore, these writes are considered concurrent. Amazon S3 internally uses last-writer-wins semantics to determine which write takes precedence. However, the order in which Amazon S3 receives the requests and the order in which applications receive acknowledgments cannot be predicted because of various factors, such as network latency. For example, W2 might be initiated by an Amazon EC2 instance in the same Region, while W1 might be initiated by a host that is farther away. The best way to determine the final value is to perform a read after both writes have been acknowledged. ^^Related services^^ After you load your data into Amazon S3, you can use it with other AWS services."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"The following are the services that you might use most frequently: Amazon Elastic Compute Cloud (Amazon EC2) – Provides secure and scalable computing capacity in the AWS Cloud. Using Amazon EC2 eliminates your need to invest in hardware upfront, so you can develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few virtual servers as you need, configure security and networking, and manage storage. Amazon EMR – Helps businesses, researchers, data analysts, and developers easily and cost-effectively process vast amounts of data. Amazon EMR uses a hosted Hadoop framework running on the web-scale infrastructure of Amazon EC2 and Amazon S3 AWS Snow Family – Helps customers that need to run operations in austere, non-data center environments, and in locations where there's a lack of consistent network connectivity. You can use AWS Snow Family devices to locally and cost-effectively access the storage and compute power of the AWS Cloud in places where an internet connection might not be an option."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"AWS Transfer Family – Provides fully managed support for file transfers directly into and out of Amazon S3 or Amazon Elastic File System (Amazon EFS) using Secure Shell (SSH) File Transfer Protocol (SFTP), File Transfer Protocol over SSL (FTPS), and File Transfer Protocol (FTP) ^^Accessing Amazon S3^^ You can work with Amazon S3 in any of the following ways: ^AWS Management Console^ The console is a web-based user interface for managing Amazon S3 and AWS resources. If you've signed up for an AWS account, you can access the Amazon S3 console by signing into the AWS Management Console and choosing S3 from the AWS Management Console home page. ^AWS Command Line Interface^ You can use the AWS command line tools to issue commands or build scripts at your system's command line to perform AWS (including S3) tasks. The AWS Command Line Interface (AWS CLI) provides commands for a broad set of AWS services."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"The AWS CLI is supported on Windows, macOS, and Linux. To get started, see the AWS Command Line Interface User Guide. For more information about the commands for Amazon S3, see s3api and s3control in the AWS CLI Command Reference. ^AWS SDKs^ AWS provides SDKs (software development kits) that consist of libraries and sample code for various programming languages and platforms (Java, Python, Ruby, .NET, iOS, Android, and so on) The AWS SDKs provide a convenient way to create programmatic access to S3 and AWS. Amazon S3 is a REST service. You can send requests to Amazon S3 using the AWS SDK libraries, which wrap the underlying Amazon S3 REST API and simplify your programming tasks. For example, the SDKs take care of tasks such as calculating signatures, cryptographically signing requests, managing errors, and retrying requests automatically."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"For information about the AWS SDKs, including how to download and install them, see Tools for AWS. Every interaction with Amazon S3 is either authenticated or anonymous. If you are using the AWS SDKs, the libraries compute the signature for authentication from the keys that you provide. For more information about how to make requests to Amazon S3, see Making requests. ^Amazon S3 REST API^ The architecture of Amazon S3 is designed to be programming language-neutral, using AWS-supported interfaces to store and retrieve objects. You can access S3 and AWS programmatically by using the Amazon S3 REST API. The REST API is an HTTP interface to Amazon S3 With the REST API, you use standard HTTP requests to create, fetch, and delete buckets and objects. To use the REST API, you can use any toolkit that supports HTTP. You can even use a browser to fetch objects, as long as they are anonymously readable."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"The REST API uses standard HTTP headers and status codes, so that standard browsers and toolkits work as expected. In some areas, we have added functionality to HTTP (for example, we added headers to support access control) In these cases, we have done our best to add the new functionality in a way that matches the style of standard HTTP usage. If you make direct REST API calls in your application, you must write the code to compute the signature and add it to the request. For more information about how to make requests to Amazon S3, see Making requests. SOAP API support over HTTP is deprecated, but it is still available over HTTPS. Newer Amazon S3 features are not supported for SOAP. We recommend that you use either the REST API or the AWS SDKs. ^^Paying for Amazon S3^^ Pricing for Amazon S3 is designed so that you don't have to plan for the storage requirements of your application."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"Most storage providers require you to purchase a predetermined amount of storage and network transfer capacity. In this scenario, if you exceed that capacity, your service is shut off or you are charged high overage fees. If you do not exceed that capacity, you pay as though you used it all. Amazon S3 charges you only for what you actually use, with no hidden fees and no overage charges. This model gives you a variable-cost service that can grow with your business while giving you the cost advantages of the AWS infrastructure. For more information, see Amazon S3 Pricing. When you sign up for AWS, your AWS account is automatically signed up for all services in AWS, including Amazon S3 However, you are charged only for the services that you use. If you are a new Amazon S3 customer, you can get started with Amazon S3 for free. For more information, see AWS free tier."
AWS \ Amazon Simple Storage Service (S3) \ User Guide \ What is Amazon S3?,https://docs.aws.amazon.com/AmazonS3/latest/userguide/index.html,"To see your bill, go to the Billing and Cost Management Dashboard in the AWS Billing and Cost Management console. To learn more about AWS account billing, see the AWS Billing User Guide. If you have questions concerning AWS billing and AWS accounts, contact AWS Support. ^^PCI DSS compliance^^ Amazon S3 supports the processing, storage, and transmission of credit card data by a merchant or service provider, and has been validated as being compliant with Payment Card Industry (PCI) Data Security Standard (DSS) For more information about PCI DSS, including how to request a copy of the AWS PCI Compliance Package, see PCI DSS Level 1."
AWS \ Amazon Simple Storage Service (S3) \ API Reference \ Amazon S3 REST API Introduction,https://docs.aws.amazon.com/AmazonS3/latest/API/Welcome.html,"^^^Amazon S3 REST API Introduction^^^ Welcome to the Amazon Simple Storage Service API Reference. This guide explains the Amazon Simple Storage Service (Amazon S3) application programming interface (API) It describes various API operations, related request and response structures, and error codes. The current version of the Amazon S3 API is 2006-03-01 Amazon S3 supports the REST API. Support for SOAP over HTTP is deprecated, but it is still available over HTTPS. However, new Amazon S3 features will not be supported for SOAP. We recommend that you use either the REST API or the AWS SDKs. Read the following about authentication and access control before going to specific API topics. Requests to Amazon S3 can be authenticated or anonymous. Authenticated access requires credentials that AWS can use to authenticate your requests. When making REST API calls directly from your code, you create a signature using valid credentials and include the signature in your request."
AWS \ Amazon Simple Storage Service (S3) \ API Reference \ Amazon S3 REST API Introduction,https://docs.aws.amazon.com/AmazonS3/latest/API/Welcome.html,"For information about various authentication methods and signature calculations, see Authenticating Requests (AWS Signature Version 4) Making REST API calls directly from your code can be cumbersome. It requires you to write the necessary code to calculate a valid signature to authenticate your requests. We recommend the following alternatives instead: Use the AWS SDKs to send your requests (see Sample Code and Libraries) With this option, you don't need to write code to calculate a signature for request authentication because the SDK clients authenticate your requests by using access keys that you provide. Unless you have a good reason not to, you should always use the AWS SDKs. Use the AWS CLI to make Amazon S3 API calls. For information about setting up the AWS CLI and example Amazon S3 commands see the following topics: Set Up the AWS CLI in the Amazon Simple Storage Service User Guide. Using Amazon S3 with the AWS Command Line Interface in the AWS Command Line Interface User Guide."
AWS \ Amazon Simple Storage Service (S3) \ API Reference \ Amazon S3 REST API Introduction,https://docs.aws.amazon.com/AmazonS3/latest/API/Welcome.html,"If you'd like to make your own REST API calls instead of using one of the above alternatives, there are some things to keep in mind. The REST API uses standard HTTP headers and status codes, so standard browsers and toolkits work as expected. In some areas, we have added functionality to HTTP (for example, we added headers to support access control) In these cases, we have done our best to add the new functionality in a way that matches the style of standard HTTP usage. For more information about making requests, see Making requests in the Amazon Simple Storage Service User Guide. For additional details about developing using REST APIs, see Developing with Amazon S3 using the REST API in the Amazon Simple Storage Service User Guide. You can have valid credentials to authenticate your requests, but unless you have permissions you cannot create or access Amazon S3 resources. For example, you must have permissions to create an S3 bucket or get an object from your bucket."
AWS \ Amazon Simple Storage Service (S3) \ API Reference \ Amazon S3 REST API Introduction,https://docs.aws.amazon.com/AmazonS3/latest/API/Welcome.html,"If you use the root user credentials of your AWS account, you have all the permissions. However, using root user credentials is not recommended. Instead, we recommend that you create IAM roles in your account and manage user permissions. For more information, see Managing Access Permissions to Your Amazon S3 Resources in the Amazon Simple Storage Service User Guide."
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB?,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/index.html,"^^^What is Amazon DynamoDB?^^^ Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling. DynamoDB also offers encryption at rest, which eliminates the operational burden and complexity involved in protecting sensitive data. For more information, see DynamoDB encryption at rest. With DynamoDB, you can create database tables that can store and retrieve any amount of data and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation. You can use the AWS Management Console to monitor resource utilization and performance metrics. DynamoDB provides on-demand backup capability. It allows you to create full backups of your tables for long-term retention and archival for regulatory compliance needs."
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB?,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/index.html,"For more information, see Using On-Demand backup and restore for DynamoDB. You can create on-demand backups and enable point-in-time recovery for your Amazon DynamoDB tables. Point-in-time recovery helps protect your tables from accidental write or delete operations. With point-in-time recovery, you can restore a table to any point in time during the last 35 days. For more information, see Point-in-time recovery: How it works. DynamoDB allows you to delete expired items from tables automatically to help you reduce storage usage and the cost of storing data that is no longer relevant. For more information, see Expiring items by using DynamoDB Time to Live (TTL) ^^High availability and durability^^ DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance."
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB?,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/index.html,"All of your data is stored on solid-state disks (SSDs) and is automatically replicated across multiple Availability Zones in an AWS Region, providing built-in high availability and data durability. You can use global tables to keep DynamoDB tables in sync across AWS Regions. For more information, see Global tables - multi-Region replication for DynamoDB. ^^Getting started with DynamoDB^^ We recommend that you begin by reading the following sections: Amazon DynamoDB: How it works—To learn essential DynamoDB concepts. Setting up DynamoDB —To learn how to set up DynamoDB (the downloadable version or the web service) Accessing DynamoDB—To learn how to access DynamoDB using the console, AWS CLI, or API. From there, you have two options to quickly get started quickly with DynamoDB: Getting started with DynamoDB. Getting started with DynamoDB and the AWS SDKs. To learn more about application development, see the following: Programming with DynamoDB and the AWS SDKs."
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB?,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/index.html,"Working with tables, items, queries, scans, and indexes. To quickly find recommendations for maximizing performance and minimizing throughput costs, see the following: Best practices for designing and architecting with DynamoDB. To learn how to tag DynamoDB resources, see Adding tags and labels to resources. For best practices, how-to guides, and tools, see Amazon DynamoDB resources. You can use AWS Database Migration Service (AWS DMS) to migrate data from a relational database or MongoDB to a DynamoDB table. For more information, see the AWS Database Migration Service User Guide. To learn how to use MongoDB as a migration source, see Using MongoDB as a source for AWS Database Migration Service. To learn how to use DynamoDB as a migration target, see Using an Amazon DynamoDB database as a target for AWS Database Migration Service. ^^DynamoDB tutorials^^ The following tutorials present complete end-to-end procedures to familiarize yourself with DynamoDB.These tutorials can be completed with the free tier of AWS and will give you practical experience using DynamoDB. Build an Application Using a NoSQL Key-Value Data Store. Create and Query a NoSQL Table with Amazon DynamoDB."
AWS \ Amazon DynamoDB \ API Reference \ Welcome,https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/index.html,"@@@^^^Welcome^^^@@@ Amazon DynamoDB provides low-level API actions for managing database tables and indexes, and for creating, reading, updating and deleting data. DynamoDB also provides API actions for accessing and processing stream records. This API Reference describes the low-level API for Amazon DynamoDB. Instead of making requests to the low-level API directly from your application, we recommend that you use one of the AWS Software Development Kits (SDKs) for your programming language. The AWS SDKs take care of request authentication, serialization, and connection management. For more information, see Overview of AWS SDK Support for DynamoDB in the Amazon DynamoDB Developer Guide. At the end of each API action description there are links to the equivalent CLI command and programming-specific language method. Similarly, at the end of each API datatype description, there are links to the equivalent programming-specific language type."
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB? \ Amazon DynamoDB: How it works \ Cheat sheet for DynamoDB,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/CheatSheet.html,"^^^Cheat sheet for DynamoDB^^^ This cheat sheet provides a quick reference for working with Amazon DynamoDB and its various AWS SDKs. ^^Initial setup^^ Sign up for AWS. Get an AWS access key to access DynamoDB programmatically. Configure your DynamoDB credentials. See also: Setting up DynamoDB (web service) Getting started with DynamoDB. Basic overview of core components. ^^SDK or CLI^^ Choose your preferred SDK, or set up the AWS CLI. When you use the AWS CLI on Windows, a backslash (\) that is not inside a quote is treated as a carriage return. Also, you must escape any quotes and braces inside other quotes. For an example, see the Windows tab in ""Create a table"" in the next section. See also: AWS CLI with DynamoDB. Getting started with DynamoDB - step 2 ^^Basic actions^^ This section provides code for basic DynamoDB tasks."
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB? \ Amazon DynamoDB: How it works \ Cheat sheet for DynamoDB,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/CheatSheet.html,"For more information about these tasks, see Getting started with DynamoDB and the AWS SDKs. ^Create a table^ ~~awsdynamodbcreate-table\--table-nameMusic\--attribute-definitions\AttributeName=Artist,AttributeType=S\AttributeName=SongTitle,AttributeType=S\--key-schema\AttributeName=Artist,KeyType=HASH\AttributeName=SongTitle,KeyType=RANGE\--provisioned-throughput\ReadCapacityUnits=10,WriteCapacityUnits=5~~ ^Write item to a table^ ~~awsdynamodbput-item\--table-nameMusic\--itemfile://item.json~~ ^Read item from a table^ ~~awsdynamodbget-item\--table-nameMusic\--itemfile://item.json~~ ^Delete item from a table^ ~~awsdynamodbdelete-item--table-nameMusic--keyfile://key.json~~ ^Query a table^"
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB? \ Amazon DynamoDB: How it works \ Cheat sheet for DynamoDB,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/CheatSheet.html,"~~awsdynamodbquery--table-nameMusic--key-condition-expression""ArtistName=:ArtistandSongName=:Songtitle""~~ ^Delete a table^ ~~awsdynamodbdelete-table--table-nameMusic~~ ^List table names^ ~~awsdynamodblist-tables~~ ^^Naming rules^^ All names must be encoded using UTF-8 and are case sensitive. Table names and index names must be between 3 and 255 characters long, and can contain only the following characters: a-z. A-Z. 0-9 _(underscore) -(dash) .(dot) Attribute names must be at least one character long, and less than 64 KB in size. For more information, see Naming rules. ^^Service quota basics^^ Read and write units. Read capacity unit (RCU) – One strongly consistent read per second, or two eventually consistent reads per second, for items up to 4 KB in size."
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB? \ Amazon DynamoDB: How it works \ Cheat sheet for DynamoDB,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/CheatSheet.html,"Write capacity unit (WCU) – One write per second, for items up to 1 KB in size. Table limits. Table size – There is no practical limit on table size. Tables are unconstrained in terms of the number of items or the number of bytes. Number of tables – For any AWS account, there is an initial quota of 2,500 tables per AWS Region. Page size limit for query and scan – There is a limit of 1 MB per page, per query or scan. If your query parameters or scan operation on a table result in more than 1 MB of data, DynamoDB returns the initial matching items. It also returns a LastEvaluatedKey property that you can use in a new request to read the next page. Indexes. Local secondary indexes (LSIs) – You can define a maximum of five local secondary indexes. LSIs are primarily useful when an index must have strong consistency with the base table."
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB? \ Amazon DynamoDB: How it works \ Cheat sheet for DynamoDB,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/CheatSheet.html,"Global secondary indexes (GSIs) – There is a default quota of 20 global secondary indexes per table. Projected secondary index attributes per table – You can project a total of up to 100 attributes into all of a table's local and global secondary indexes. This only applies to user-specified projected attributes. Partition keys. The minimum length of a partition key value is 1 byte. The maximum length is 2048 bytes. There is no practical limit on the number of distinct partition key values, for tables or for secondary indexes. The minimum length of a sort key value is 1 byte. The maximum length is 1024 bytes. In general, there is no practical limit on the number of distinct sort key values per partition key value. The exception is for tables with secondary indexes. For more information on secondary indexes, partition key design, and sort key design, see Best practices. Limits for commonly used data types."
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB? \ Amazon DynamoDB: How it works \ Cheat sheet for DynamoDB,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/CheatSheet.html,"String – The length of a string is constrained by the maximum item size of 400 KB. Strings are Unicode with UTF-8 binary encoding. Number – A number can have up to 38 digits of precision, and can be positive, negative, or zero. Binary – The length of a binary is constrained by the maximum item size of 400 KB. Applications that work with binary attributes must encode the data in base64 encoding before sending it to DynamoDB. For a full list of supported data types, see Data types. For more information, also see Service quotas. ^Items, attributes, and expression parameters^ The maximum item size in DynamoDB is 400 KB, which includes both attribute name binary length (UTF-8 length) and attribute value binary lengths (UTF-8 length) The attribute name counts towards the size limit."
AWS \ Amazon DynamoDB \ Developer Guide \ What is Amazon DynamoDB? \ Amazon DynamoDB: How it works \ Cheat sheet for DynamoDB,https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/CheatSheet.html,"There is no limit on the number of values in a list, map, or set, as long as the item that contains the values fits within the 400-KB item size limit. For expression parameters, the maximum length of any expression string is 4 KB. For more information about item size, attributes, and expression parameters, see Service quotas. ^^More information^^ Security. Monitoring and logging. Working with streams. Backups and Point-in-time recovery. Integrating with other AWS services. API reference. Architecture Center: Database Best Practices. Video tutorials. DynamoDB forum."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"^^^What is Amazon Relational Database Service (Amazon RDS)?^^^ Amazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up, operate, and scale a relational database in the AWS Cloud. It provides cost-efficient, resizable capacity for an industry-standard relational database and manages common database administration tasks. This guide covers Amazon RDS database engines other than Amazon Aurora. For information about using Amazon Aurora, see the Amazon Aurora User Guide. If you are new to AWS products and services, begin learning more with the following resources: For an overview of all AWS products, see What is cloud computing? Amazon Web Services provides a number of database services. To learn more about the variety of database options available on AWS, see Choosing an AWS database service and Running databases on AWS. ^^Overview of Amazon RDS^^"
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"Why do you want to run a relational database in the AWS Cloud? Because AWS takes over many of the difficult and tedious management tasks of a relational database. ^Amazon EC2 and on-premises databases^ Amazon Elastic Compute Cloud (Amazon EC2) provides scalable computing capacity in the AWS Cloud. Amazon EC2 eliminates your need to invest in hardware up front, so you can develop and deploy applications faster. When you buy an on-premises server, you get CPU, memory, storage, and IOPS, all bundled together. With Amazon EC2, these are split apart so that you can scale them independently. If you need more CPU, less IOPS, or more storage, you can easily allocate them. For a relational database in an on-premises server, you assume full responsibility for the server, operating system, and software. For a database on an Amazon EC2 instance, AWS manages the layers below the operating system."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"In this way, Amazon EC2 eliminates some of the burden of managing an on-premises database server. In the following table, you can find a comparison of the management models for on-premises databases and Amazon EC2 Feature. On-premises management. Amazon EC2 management. Application optimization. Customer. Customer. Scaling. Customer. Customer. High availability. Customer. Customer. Database backups. Customer. Customer. Database software patching. Customer. Customer. Database software install. Customer. Customer. Amazon EC2 isn't a fully managed service. Thus, when you run a database on Amazon EC2, you're more prone to user errors. For example, when you update the operating system or database software manually, you might accidentally cause application downtime. You might spend hours checking every change to identify and fix an issue. Operating system (OS) patching. Customer. Customer. OS installation. Customer. Customer. Server maintenance. Customer. AWS."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"^Amazon RDS and Amazon EC2^ Hardware lifecycle. Customer. AWS. Amazon RDS is a managed database service. It's responsible for most management tasks. By eliminating tedious manual tasks, Amazon RDS frees you to focus on your application and your users. We recommend Amazon RDS over Amazon EC2 as your default choice for most database deployments. Power, network, and cooling. Customer. AWS. In the following table, you can find a comparison of the management models in Amazon EC2 and Amazon RDS. Feature. Amazon EC2 management. Amazon RDS management. Application optimization. Customer. Customer. Scaling. Customer. AWS. High availability. Customer. AWS. Database backups. Customer. AWS. Database software patching. Customer. AWS. Database software install. Customer. AWS. Amazon RDS provides the following specific advantages over database deployments that aren't fully managed: OS patching. Customer. AWS. OS installation. Customer. AWS."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"You can use the database products you are already familiar with: MariaDB, Microsoft SQL Server, MySQL, Oracle, and PostgreSQL. Server maintenance. AWS. AWS. Amazon RDS manages backups, software patching, automatic failure detection, and recovery. Hardware lifecycle. AWS. AWS. You can turn on automated backups, or manually create your own backup snapshots. You can use these backups to restore a database. The Amazon RDS restore process works reliably and efficiently. Power, network, and cooling. AWS. AWS. You can get high availability with a primary instance and a synchronous secondary instance that you can fail over to when problems occur. You can also use read replicas to increase read scaling. In addition to the security in your database package, you can help control who can access your RDS databases. To do so, you can use AWS Identity and Access Management (IAM) to define users and permissions."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"You can also help protect your databases by putting them in a virtual private cloud (VPC) ^Amazon RDS Custom for Oracle and Microsoft SQL Server^ Amazon RDS Custom is an RDS management type that gives you full access to your database and operating system. You can use the control capabilities of RDS Custom to access and customize the database environment and operating system for legacy and packaged business applications. Meanwhile, Amazon RDS automates database administration tasks and operations. In this deployment model, you can install applications and change configuration settings to suit your applications. At the same time, you can offload database administration tasks such as provisioning, scaling, upgrading, and backup to AWS. You can take advantage of the database management benefits of Amazon RDS, with more control and flexibility. For Oracle Database and Microsoft SQL Server, RDS Custom combines the automation of Amazon RDS with the flexibility of Amazon EC2 For more information on RDS Custom, see Working with Amazon RDS Custom."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"With the shared responsibility model of RDS Custom, you get more control than in Amazon RDS, but also more responsibility. For more information, see Shared responsibility model in RDS Custom. ^Amazon RDS on AWS Outposts^ Amazon RDS on AWS Outposts extends RDS for SQL Server, RDS for MySQL, and RDS for PostgreSQL databases to AWS Outposts environments. AWS Outposts uses the same hardware as in public AWS Regions to bring AWS services, infrastructure, and operation models on-premises. With RDS on Outposts, you can provision managed DB instances close to the business applications that must run on-premises. For more information, see Working with Amazon RDS on AWS Outposts. ^^DB instances^^ A DB instance is an isolated database environment in the AWS Cloud. The basic building block of Amazon RDS is the DB instance. Your DB instance can contain one or more user-created databases."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"You can access your DB instance by using the same tools and applications that you use with a standalone database instance. You can create and modify a DB instance by using the AWS Command Line Interface (AWS CLI), the Amazon RDS API, or the AWS Management Console. ^DB engines^ A DB engine is the specific relational database software that runs on your DB instance. Amazon RDS currently supports the following engines: MariaDB. Microsoft SQL Server. MySQL. Oracle. PostgreSQL. Each DB engine has its own supported features, and each version of a DB engine can include specific features. Support for Amazon RDS features varies across AWS Regions and specific versions of each DB engine. To check feature support in different engine versions and Regions, see Supported features in Amazon RDS by AWS Region and DB engine. Additionally, each DB engine has a set of parameters in a DB parameter group that control the behavior of the databases that it manages. ^DB instance classes^"
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"A DB instance class determines the computation and memory capacity of a DB instance. A DB instance class consists of both the DB instance type and the size. Each instance type offers different compute, memory, and storage capabilities. For example, db.m6g is a general-purpose DB instance type powered by AWS Graviton2 processors. Within the db.m6g instance type, db.m6g.2xlarge is a DB instance class. You can select the DB instance that best meets your needs. If your needs change over time, you can change DB instances. For information, see DB instance classes. For pricing information on DB instance classes, see the Pricing section of the Amazon RDS product page. ^DB instance storage^ Amazon EBS provides durable, block-level storage volumes that you can attach to a running instance. DB instance storage comes in the following types: General Purpose (SSD) Provisioned IOPS (PIOPS) Magnetic."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"The storage types differ in performance characteristics and price. You can tailor your storage performance and cost to the needs of your database. Each DB instance has minimum and maximum storage requirements depending on the storage type and the database engine it supports. It's important to have sufficient storage so that your databases have room to grow. Also, sufficient storage makes sure that features for the DB engine have room to write content or log entries. For more information, see Amazon RDS DB instance storage. ^Amazon Virtual Private Cloud (Amazon VPC)^ You can run a DB instance on a virtual private cloud (VPC) using the Amazon Virtual Private Cloud (Amazon VPC) service. When you use a VPC, you have control over your virtual networking environment. You can choose your own IP address range, create subnets, and configure routing and access control lists. The basic functionality of Amazon RDS is the same whether it's running in a VPC or not."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"Amazon RDS manages backups, software patching, automatic failure detection, and recovery. There's no additional cost to run your DB instance in a VPC. For more information on using Amazon VPC with RDS, see Amazon VPC VPCs and Amazon RDS. Amazon RDS uses Network Time Protocol (NTP) to synchronize the time on DB instances. ^^AWS Regions and Availability Zones^^ Amazon cloud computing resources are housed in highly available data center facilities in different areas of the world (for example, North America, Europe, or Asia) Each data center location is called an AWS Region. Each AWS Region contains multiple distinct locations called Availability Zones, or AZs. Each Availability Zone is engineered to be isolated from failures in other Availability Zones. Each is engineered to provide inexpensive, low-latency network connectivity to other Availability Zones in the same AWS Region. By launching instances in separate Availability Zones, you can protect your applications from the failure of a single location."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"For more information, see Regions, Availability Zones, and Local Zones. You can run your DB instance in several Availability Zones, an option called a Multi-AZ deployment. When you choose this option, Amazon automatically provisions and maintains one or more secondary standby DB instances in a different Availability Zone. Your primary DB instance is replicated across Availability Zones to each secondary DB instance. This approach helps provide data redundancy and failover support, eliminate I/O freezes, and minimize latency spikes during system backups. In a Multi-AZ DB clusters deployment, the secondary DB instances can also serve read traffic. For more information, see Configuring and managing a Multi-AZ deployment. ^^Security^^ A security group controls the access to a DB instance. It does so by allowing access to IP address ranges or Amazon EC2 instances that you specify. For more information about security groups, see Security in Amazon RDS. ^^Amazon RDS monitoring^^"
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"There are several ways that you can track the performance and health of a DB instance. You can use the Amazon CloudWatch service to monitor the performance and health of a DB instance. CloudWatch performance charts are shown in the Amazon RDS console. You can also subscribe to Amazon RDS events to be notified about changes to a DB instance, DB snapshot, or DB parameter group. For more information, see Monitoring metrics in an Amazon RDS instance. ^^How to work with Amazon RDS^^ There are several ways that you can interact with Amazon RDS. ^AWS Management Console^ The AWS Management Console is a simple web-based user interface. You can manage your DB instances from the console with no programming required. To access the Amazon RDS console, sign in to the AWS Management Console and open the Amazon RDS console at https://console.aws.amazon.com/rds/ ^Command line interface^"
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"You can use the AWS Command Line Interface (AWS CLI) to access the Amazon RDS API interactively. To install the AWS CLI, see Installing the AWS Command Line Interface. To begin using the AWS CLI for RDS, see AWS Command Line Interface reference for Amazon RDS. ^Amazon RDS APIs^ If you are a developer, you can access the Amazon RDS programmatically using APIs. For more information, see Amazon RDS API reference. For application development, we recommend that you use one of the AWS Software Development Kits (SDKs) The AWS SDKs handle low-level details such as authentication, retry logic, and error handling, so that you can focus on your application logic. AWS SDKs are available for a wide variety of languages. For more information, see Tools for Amazon web services. AWS also provides libraries, sample code, tutorials, and other resources to help you get started more easily. For more information, see Sample code & libraries."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"^^How you are charged for Amazon RDS^^ When you use Amazon RDS, you can choose to use on-demand DB instances or reserved DB instances. For more information, see DB instance billing for Amazon RDS. For Amazon RDS pricing information, see the Amazon RDS product page. ^^What's next?^^ The preceding section introduced you to the basic infrastructure components that RDS offers. What should you do next? ^Getting started^ Create a DB instance using instructions in Getting started with Amazon RDS. ^Topics specific to database engines^ You can review information specific to a particular DB engine in the following sections: Amazon RDS for MariaDB. Amazon RDS for Microsoft SQL Server. Amazon RDS for MySQL. Amazon RDS for Oracle. Amazon RDS for PostgreSQL. ^^Amazon RDS shared responsibility model^^ Amazon RDS is responsible for hosting the software components and infrastructure of DB instances and DB cluster."
AWS \ Amazon RDS \ User Guide \ What is Amazon Relational Database Service (Amazon RDS)?,https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/index.html,"You are responsible for query tuning, which is the process of adjusting SQL queries to improve performance. Query performance is highly dependent on database design, data size, data distribution, application workload, and query patterns, which can vary greatly. Monitoring and tuning are highly individualized processes that you own for your RDS databases. You can use Amazon RDS Performance Insights and other tools to identify problematic queries."
AWS \ Amazon RDS \ User Guide for Aurora \ What is Amazon Aurora?,https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/index.html,"^^^What is Amazon Aurora?^^^ Amazon Aurora (Aurora) is a fully managed relational database engine that's compatible with MySQL and PostgreSQL. You already know how MySQL and PostgreSQL combine the speed and reliability of high-end commercial databases with the simplicity and cost-effectiveness of open-source databases. The code, tools, and applications you use today with your existing MySQL and PostgreSQL databases can be used with Aurora. With some workloads, Aurora can deliver up to five times the throughput of MySQL and up to three times the throughput of PostgreSQL without requiring changes to most of your existing applications. Aurora includes a high-performance storage subsystem. Its MySQL- and PostgreSQL-compatible database engines are customized to take advantage of that fast distributed storage. The underlying storage grows automatically as needed. An Aurora cluster volume can grow to a maximum size of 128 tebibytes (TiB)"
AWS \ Amazon RDS \ User Guide for Aurora \ What is Amazon Aurora?,https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/index.html,"Aurora also automates and standardizes database clustering and replication, which are typically among the most challenging aspects of database configuration and administration. Aurora is part of the managed database service Amazon Relational Database Service (Amazon RDS) Amazon RDS is a web service that makes it easier to set up, operate, and scale a relational database in the cloud. If you are not already familiar with Amazon RDS, see the Amazon Relational Database Service User Guide. To learn more about the variety of database options available on Amazon Web Services, see Choosing the right database for your organization on AWS. ^^Amazon RDS shared responsibility model^^ Amazon RDS is responsible for hosting the software components and infrastructure of DB instances and DB clusters. You are responsible for query tuning, which is the process of adjusting SQL queries to improve performance. Query performance is highly dependent on database design, data size, data distribution, application workload, and query patterns, which can vary greatly."
AWS \ Amazon RDS \ User Guide for Aurora \ What is Amazon Aurora?,https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/index.html,"Monitoring and tuning are highly individualized processes that you own for your RDS databases. You can use Amazon RDS Performance Insights and other tools to identify problematic queries. ^^How Amazon Aurora works with Amazon RDS^^ The following points illustrate how Amazon Aurora relates to the standard MySQL and PostgreSQL engines available in Amazon RDS: You choose Aurora MySQL or Aurora PostgreSQL as the DB engine option when setting up new database servers through Amazon RDS. Aurora takes advantage of the familiar Amazon Relational Database Service (Amazon RDS) features for management and administration. Aurora uses the Amazon RDS AWS Management Console interface, AWS CLI commands, and API operations to handle routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. Aurora management operations typically involve entire clusters of database servers that are synchronized through replication, instead of individual database instances."
AWS \ Amazon RDS \ User Guide for Aurora \ What is Amazon Aurora?,https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/index.html,"The automatic clustering, replication, and storage allocation make it simple and cost-effective to set up, operate, and scale your largest MySQL and PostgreSQL deployments. You can bring data from Amazon RDS for MySQL and Amazon RDS for PostgreSQL into Aurora by creating and restoring snapshots, or by setting up one-way replication. You can use push-button migration tools to convert your existing RDS for MySQL and RDS for PostgreSQL applications to Aurora. Before using Amazon Aurora, complete the steps in Setting up your environment for Amazon Aurora, and then review the concepts and features of Aurora in Amazon Aurora DB clusters."
Architecture Best Practices for Databases,https://aws.amazon.com/architecture/databases/,^^^Architecture Best Practices for Databases^^^ ^^Featured topic: Database Modernization^^ ^GUIDE^ ^PATTERN^ ^^Choose a DR capability for Amazon RDS for…^^ ^^Assess query performance for migrating SQL…^^ HTML | PDF. Tags: Databases | Storage & Backup. HTML | PDF. Tags: Databases | Migration. ^THIS IS MY ARCHITECTURE^ ^GUIDE^ ^^3M: Parallel Serverless Workflows for Materials…^^ ^^Best practices for deploying SQL Server…^^ Learn how 3M uses a parallel serverless architecture to securely serve materials science information to a global team of scientists and business analysts. HTML | PDF. Tags: Databases. Check out more resources for architecting in the #AWS cloud: ^THIS IS MY ARCHITECTURE^ ^PATTERN^ ^^Migrate Oracle E-Business Suite to Amazon RDS…^^ ^^The New York Times: Giving Developers the…^^
Architecture Best Practices for Databases,https://aws.amazon.com/architecture/databases/,"Developers not only need the freedom to rapidly deploy and scale the cloud resources they need to build their applications, but also maintain organizational governance and control. In this episode, Ahmed Bebars from the New York Times describes how they used AWS ControlTower to manage, control and govern their AWS accounts as well as providing isolation layers between their different services reducing deployment time from days to minutes and ensuring standards are maintained. HTML | PDF. Tags: Databases | Infrastructure | Migration. ^Database Blog Posts^ ^Learn About AWS^ ^Resources for AWS^ ^Developers on AWS^ ^Help^"
AWS \ AWS Lambda \ Developer Guide \ What is AWS Lambda?,https://docs.aws.amazon.com/lambda/latest/dg/index.html,"^^^What is AWS Lambda?^^^ AWS Lambda is a compute service that lets you run code without provisioning or managing servers. Lambda runs your code on a high-availability compute infrastructure and performs all of the administration of the compute resources, including server and operating system maintenance, capacity provisioning and automatic scaling, and logging. With Lambda, all you need to do is supply your code in one of the language runtimes that Lambda supports. You organize your code into Lambda functions. The Lambda service runs your function only when needed and scales automatically. You only pay for the compute time that you consume—there is no charge when your code is not running. For more information, see AWS Lambda Pricing. To learn how to build serverless solutions, check out the Serverless Developer Guide. ^^When to use Lambda^^ Lambda is an ideal compute service for application scenarios that need to scale up rapidly, and scale down to zero when not in demand. For example, you can use Lambda for:"
AWS \ AWS Lambda \ Developer Guide \ What is AWS Lambda?,https://docs.aws.amazon.com/lambda/latest/dg/index.html,"File processing: Use Amazon Simple Storage Service (Amazon S3) to trigger Lambda data processing in real time after an upload. Stream processing: Use Lambda and Amazon Kinesis to process real-time streaming data for application activity tracking, transaction order processing, clickstream analysis, data cleansing, log filtering, indexing, social media analysis, Internet of Things (IoT) device data telemetry, and metering. Web applications: Combine Lambda with other AWS services to build powerful web applications that automatically scale up and down and run in a highly available configuration across multiple data centers. IoT backends: Build serverless backends using Lambda to handle web, mobile, IoT, and third-party API requests. Mobile backends: Build backends using Lambda and Amazon API Gateway to authenticate and process API requests. Use AWS Amplify to easily integrate with your iOS, Android, Web, and React Native frontends. When using Lambda, you are responsible only for your code."
AWS \ AWS Lambda \ Developer Guide \ What is AWS Lambda?,https://docs.aws.amazon.com/lambda/latest/dg/index.html,"Lambda manages the compute fleet that offers a balance of memory, CPU, network, and other resources to run your code. Because Lambda manages these resources, you cannot log in to compute instances or customize the operating system on provided runtimes. Lambda performs operational and administrative activities on your behalf, including managing capacity, monitoring, and logging your Lambda functions. If you do need to manage your compute resources, AWS has other compute services to consider, such as: AWS App Runner builds and deploys containerized web applications automatically, load balances traffic with encryption, scales to meet your traffic needs, and allows for the configuration of how services are accessed and communicate with other AWS applications in a private Amazon VPC. AWS Fargate with Amazon ECS runs containers without having to provision, configure, or scale clusters of virtual machines. Amazon EC2 lets you customize operating system, network and security settings, and the entire software stack."
AWS \ AWS Lambda \ Developer Guide \ What is AWS Lambda?,https://docs.aws.amazon.com/lambda/latest/dg/index.html,"You are responsible for provisioning capacity, monitoring fleet health and performance, and using Availability Zones for fault tolerance. ^^Key features^^ The following key features help you develop Lambda applications that are scalable, secure, and easily extensible: Configure your Lambda function using the console or AWS CLI. Use environment variables to adjust your function's behavior without updating code. Manage the deployment of your functions with versions, so that, for example, a new function can be used for beta testing without affecting users of the stable production version. Create a container image for a Lambda function by using an AWS provided base image or an alternative base image so that you can reuse your existing container tooling or deploy larger workloads that rely on sizable dependencies, such as machine learning. Package libraries and other dependencies to reduce the size of deployment archives and makes it faster to deploy your code. Augment your Lambda functions with tools for monitoring, observability, security, and governance. Add a dedicated HTTP(S) endpoint to your Lambda function."
AWS \ AWS Lambda \ Developer Guide \ What is AWS Lambda?,https://docs.aws.amazon.com/lambda/latest/dg/index.html,"Configure your Lambda function URLs to stream response payloads back to clients from Node.js functions, to improve time to first byte (TTFB) performance or to return larger payloads. Apply fine-grained control over the scaling and responsiveness of your production applications. Verify that only approved developers publish unaltered, trusted code in your Lambda functions. Create a private network for resources such as databases, cache instances, or internal services. Configure a function to mount an Amazon Elastic File System (Amazon EFS) to a local directory, so that your function code can access and modify shared resources safely and at high concurrency. Improve startup performance for Java runtimes by up to 10x at no extra cost, typically with no changes to your function code."
AWS \ AWS Lambda \ Developer Guide \ API reference,https://docs.aws.amazon.com/lambda/latest/dg/API_Reference.html,"^^^API reference^^^ This section contains the AWS Lambda API Reference documentation. When making the API calls, you will need to authenticate your request by providing a signature. AWS Lambda supports signature version 4 For more information, see Signature Version 4 signing process in the Amazon Web Services General Reference. For an overview of the service, see What is AWS Lambda? You can use the AWS CLI to explore the AWS Lambda API. This guide provides several tutorials that use the AWS CLI. Topics. Actions. Data Types. ^^Certificate errors when using an SDK^^ Because AWS SDKs use the CA certificates from your computer, changes to the certificates on the AWS servers can cause connection failures when you attempt to use an SDK. You can prevent these failures by keeping your computer's CA certificates and operating system up-to-date. If you encounter this issue in a corporate environment and do not manage your own computer, you might need to ask an administrator to assist with the update process."
AWS \ AWS Lambda \ Developer Guide \ API reference,https://docs.aws.amazon.com/lambda/latest/dg/API_Reference.html,"The following list shows minimum operating system and Java versions: Microsoft Windows versions that have updates from January 2005 or later installed contain at least one of the required CAs in their trust list. Mac OS X 10.4 with Java for Mac OS X 10.4 Release 5 (February 2007), Mac OS X 10.5 (October 2007), and later versions contain at least one of the required CAs in their trust list. Red Hat Enterprise Linux 5 (March 2007), 6, and 7 and CentOS 5, 6, and 7 all contain at least one of the required CAs in their default trusted CA list."
AWS \ AWS Lambda \ Developer Guide \ API reference,https://docs.aws.amazon.com/lambda/latest/dg/API_Reference.html,"Java 1.4.2_12 (May 2006), 5 Update 2 (March 2005), and all later versions, including Java 6 (December 2006), 7, and 8, contain at least one of the required CAs in their default trusted CA list. When accessing the AWS Lambda management console or AWS Lambda API endpoints, whether through browsers or programmatically, you will need to ensure your client machines support any of the following CAs: Amazon Root CA 1 Starfield Services Root Certificate Authority - G2 Starfield Class 2 Certification Authority. Root certificates from the first two authorities are available from Amazon trust services, but keeping your computer up-to-date is the more straightforward solution. To learn more about ACM-provided certificates, see AWS Certificate Manager FAQs."
AWS \ AWS Lambda \ Operator Guide \ Introduction,https://docs.aws.amazon.com/lambda/latest/operatorguide/intro.html,"^^^Introduction^^^ AWS Lambda is a flexible service designed for a wide variety of use-cases. Across the millions of AWS customers using Lambda every month, serverless applications generally fall into several common categories: Web applications: serve the front-end code via Amazon S3 and Amazon CloudFront, or automating the entire deployment and hosting with AWS Amplify Console. Web and mobile backends: the front-ends interact with the backend via API Gateway. Integrated authorization and authentication are provided by Amazon Cognito or APN Partners like Auth0 Data processing: event-based processing tasks triggered by data changes in data stores, or streaming data ETL tasks with Amazon Kinesis and Lambda. Parallelized computing tasks: splitting highly complex, long-lived computations to individual tasks across many Lambda function instances to process data more quickly in parallel. Internet of Things (IoT) workloads: processing data generated by physical IoT devices."
AWS \ AWS Lambda \ Operator Guide \ Introduction,https://docs.aws.amazon.com/lambda/latest/operatorguide/intro.html,"Additionally, many workloads are hybrid serverless applications, especially where legacy systems are being migrated from either on-premises or instance-based environments. In this case, developers can gradually migrate functionality from a legacy system to a Lambda-based application. This guide is built for developers and operators of Lambda-based applications. It is aimed at operators of typical production serverless applications, looking to understand more clearly how to build, measure, troubleshoot, and optimize their compute processes. This guide covers concepts and best practices for designing Lambda-based applications, together with an approach for ongoing monitoring and troubleshooting. Serverless applications can include a wide variety of different AWS services to manage APIs, messaging, storage, and content distribution. Most of these applications rely upon Lambda for connecting these services and transforming the data throughout an application. This guide focuses on the role of Lambda in these architectures, and how you can fine-tune your functions and their configurations to maximize reliability and maintainability, and reduce cost."
AWS \ AWS Lambda \ Operator Guide \ Introduction,https://docs.aws.amazon.com/lambda/latest/operatorguide/intro.html,"Lambda-based applications are event-driven architectures with many of the characteristics of distributed systems. While Lambda handles many of the complex tasks like scaling and infrastructure management, it’s important for operators to understand the scope of knowledge that they need to manage serverless applications successfully. As AWS customers adopt Lambda to solve many of their most challenging workloads, understanding the troubleshooting and monitoring tasks involved is the key to becoming a proficient operator. Both start-ups and enterprises develop Lambda-based applications for green field applications and legacy applications. As these applications develop features and build traffic, many of the same best practices for operations apply. This guide covers many of the most important operational best practices and advice while explaining core topics underpinning how Lambda-based applications work. The first half of this guide provides a deep dive into foundational topics around event-driven architectures, application design, and security. The latter half covers guidance for operators around debugging, monitoring and observability, and performance optimization."
AWS \ AWS Lambda \ Operator Guide \ Introduction,https://docs.aws.amazon.com/lambda/latest/operatorguide/intro.html,"The goal is to provide a concrete, actionable approach to operating and troubleshooting Lambda-based applications. These are the topics covered in detail: Event-driven architectures: understanding how events drive serverless applications informs the design of your workload. This chapter explains: how Lambda fits into this paradigm; the benefits and tradeoffs of event-driven architectures; design principles, stateless design, idempotency, and message ordering; retry behaviors; using AWS services; avoiding common anti-patterns. Application design: topics include: understanding quotas; scaling and concurrency; choosing and managing runtimes and SDKs; networking and VPC configurations; comparing synchronous versus asynchronous invocations; controlling traffic flow for non-serverless services. Security: security is the primary concern at AWS, but all developers have a role to play in developing secure applications. This covers: the shared responsibility model; applying the principles of least privilege; handling sensitive data; IAM roles and resource policies; authorization and authentication; code signing; protecting applications with public endpoints."
AWS \ AWS Lambda \ Operator Guide \ Introduction,https://docs.aws.amazon.com/lambda/latest/operatorguide/intro.html,"Debugging: the process of identifying errors in software is critical to any production workload. Topics include: standardizing a debugging approach; capturing and replaying events; troubleshooting executions, networking, and deployments; identifying common causes of errors (memory configurations, timeouts, quotas, third-party libraries, and unintended leakage between invocations) Monitoring and observability: serverless applications have parallels with distributed applications for monitoring and observability, presenting challenges to new serverless operators. This chapter explains: instrumentation best practices; CloudWatch Logs (using Insights and AWS Resource Groups); tracing with X-Ray; alerts and automation; code storage optimization. Performance optimization: while Lambda manages running and scaling functions, there are many levers available to developers that influence the performance. Topics include: cold starts and latency, package sizes and dependencies, memory and power settings; performance and cost; maximizing throughput. This guide will be revised regularly to incorporate new Lambda features and AWS services as they are released.If you have any questions or comments about any of the content in this guide, raise an issue in the GitHub repository or contact the author. James Beswick AWS Serverless Developer Advocate jbeswick@amazon.com."
AWS \ Amazon VPC \ User Guide \ What is Amazon VPC?,https://docs.aws.amazon.com/vpc/latest/userguide/index.html,"^^^What is Amazon VPC?^^^ With Amazon Virtual Private Cloud (Amazon VPC), you can launch AWS resources in a logically isolated virtual network that you've defined. This virtual network closely resembles a traditional network that you'd operate in your own data center, with the benefits of using the scalable infrastructure of AWS. The following diagram shows an example VPC. The VPC has one subnet in each of the Availability Zones in the Region, EC2 instances in each subnet, and an internet gateway to allow communication between the resources in your VPC and the internet. For more information, see Amazon Virtual Private Cloud (Amazon VPC) ^^Features^^ The following features help you configure a VPC to provide the connectivity that your applications need: A VPC is a virtual network that closely resembles a traditional network that you'd operate in your own data center. After you create a VPC, you can add subnets. A subnet is a range of IP addresses in your VPC."
AWS \ Amazon VPC \ User Guide \ What is Amazon VPC?,https://docs.aws.amazon.com/vpc/latest/userguide/index.html,"A subnet must reside in a single Availability Zone. After you add subnets, you can deploy AWS resources in your VPC. You can assign IP addresses, both IPv4 and IPv6, to your VPCs and subnets. You can also bring your public IPv4 and IPv6 GUA addresses to AWS and allocate them to resources in your VPC, such as EC2 instances, NAT gateways, and Network Load Balancers. Use route tables to determine where network traffic from your subnet or gateway is directed. A gateway connects your VPC to another network. For example, use an internet gateway to connect your VPC to the internet. Use a VPC endpoint to connect to AWS services privately, without the use of an internet gateway or NAT device. Use a VPC peering connection to route traffic between the resources in two VPCs. Copy network traffic from network interfaces and send it to security and monitoring appliances for deep packet inspection."
AWS \ Amazon VPC \ User Guide \ What is Amazon VPC?,https://docs.aws.amazon.com/vpc/latest/userguide/index.html,"Use a transit gateway, which acts as a central hub, to route traffic between your VPCs, VPN connections, and AWS Direct Connect connections. A flow log captures information about the IP traffic going to and from network interfaces in your VPC. Connect your VPCs to your on-premises networks using AWS Virtual Private Network (AWS VPN) ^^Getting started with Amazon VPC^^ Your AWS account includes a default VPC in each AWS Region. Your default VPCs are configured such that you can immediately start launching and connecting to EC2 instances. For more information, see Get started with Amazon VPC. You can choose to create additional VPCs with the subnets, IP addresses, gateways and routing that you need. For more information, see Create a VPC. ^^Working with Amazon VPC^^ You can create and manage your VPCs using any of the following interfaces:"
AWS \ Amazon VPC \ User Guide \ What is Amazon VPC?,https://docs.aws.amazon.com/vpc/latest/userguide/index.html,"AWS Management Console — Provides a web interface that you can use to access your VPCs. AWS Command Line Interface (AWS CLI) — Provides commands for a broad set of AWS services, including Amazon VPC, and is supported on Windows, Mac, and Linux. For more information, see AWS Command Line Interface. AWS SDKs — Provides language-specific APIs and takes care of many of the connection details, such as calculating signatures, handling request retries, and error handling. For more information, see AWS SDKs. Query API — Provides low-level API actions that you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC, but it requires that your application handle low-level details such as generating the hash to sign the request, and error handling. For more information, see Amazon VPC actions in the Amazon EC2 API Reference. ^^Pricing for Amazon VPC^^ There's no additional charge for using a VPC."
AWS \ Amazon VPC \ User Guide \ What is Amazon VPC?,https://docs.aws.amazon.com/vpc/latest/userguide/index.html,"There are charges for some VPC components, such as NAT gateways, IP Address Manager, traffic mirroring, Reachability Analyzer, and Network Access Analyzer. For more information, see Amazon VPC Pricing. Pricing for public IPv4 addresses. Public IPv4 addresses are charged. For specific pricing information, see the Public IPv4 address tab in Amazon VPC Pricing. Private IPv4 addresses (RFC 1918) are not charged. Nearly all resources you launch in your VPC come with an IP address for connectivity. While the vast majority of resources in your VPC use private IPv4 addresses, resources that require direct access to the internet over IPv4 use public IPv4 addresses. A public IPv4 address is an IPv4 address that is routable from the internet. A public IPv4 address is necessary for a resource to be directly reachable from the internet over IPv4 The types of public IPv4 addresses are:"
AWS \ Amazon VPC \ User Guide \ What is Amazon VPC?,https://docs.aws.amazon.com/vpc/latest/userguide/index.html,"Elastic IP addresses (EIPs): Static, public IPv4 addresses provided by Amazon that you can associate with an EC2 instance, elastic network interface, or AWS resource. EC2 public IPv4 addresses: Public IPv4 addresses assigned to an EC2 instance by Amazon (if the EC2 instance is launched into a default subnet or if the instance is launched into a subnet that’s been configured to automatically assign a public IPv4 address) BYOIPv4 addresses: Public IPv4 addresses in the IPv4 address range that you’ve brought to AWS using Bring your own IP addresses (BYOIP) Service-managed IPv4 addresses: Public IPv4 addresses automatically provisioned on AWS resources and managed by an AWS service. For example, public IPv4 addresses on Amazon ECS, Amazon RDS, or Amazon Workspaces. Below is a list of most common AWS services that can use public IPv4 addresses. Amazon AppStream 2.0 AWS Database Migration Service. Amazon EC2"
AWS \ Amazon VPC \ User Guide \ What is Amazon VPC?,https://docs.aws.amazon.com/vpc/latest/userguide/index.html,Amazon Elastic Container Service. Amazon EKS. Amazon EMR. AWS Global Accelerator. AWS Mainframe Modernization. Amazon Managed Streaming for Apache Kafka. Amazon MQ. Amazon RDS. Amazon Redshift. AWS Site-to-Site VPN. Amazon VPC NAT gateway. Amazon WorkSpaces. Elastic Load Balancing.
AWS \ Amazon VPC \ VPC Peering \ What is VPC peering?,https://docs.aws.amazon.com/vpc/latest/peering/index.html,"^^^What is VPC peering?^^^ A virtual private cloud (VPC) is a virtual network dedicated to your AWS account. It is logically isolated from other virtual networks in the AWS Cloud. You can launch AWS resources, such as Amazon EC2 instances, into your VPC. A VPC peering connection is a networking connection between two VPCs that enables you to route traffic between them using private IPv4 addresses or IPv6 addresses. Instances in either VPC can communicate with each other as if they are within the same network. You can create a VPC peering connection between your own VPCs, or with a VPC in another AWS account. The VPCs can be in different Regions (also known as an inter-Region VPC peering connection)"
AWS \ Amazon VPC \ VPC Peering \ What is VPC peering?,https://docs.aws.amazon.com/vpc/latest/peering/index.html,"AWS uses the existing infrastructure of a VPC to create a VPC peering connection; it is neither a gateway nor a VPN connection, and does not rely on a separate piece of physical hardware. There is no single point of failure for communication or a bandwidth bottleneck. A VPC peering connection helps you to facilitate the transfer of data. For example, if you have more than one AWS account, you can peer the VPCs across those accounts to create a file sharing network. You can also use a VPC peering connection to allow other VPCs to access resources you have in one of your VPCs. When you establish peering relationships between VPCs across different AWS Regions, resources in the VPCs (for example, EC2 instances and Lambda functions) in different AWS Regions can communicate with each other using private IP addresses, without using a gateway, VPN connection, or network appliance. The traffic remains in the private IP space."
AWS \ Amazon VPC \ VPC Peering \ What is VPC peering?,https://docs.aws.amazon.com/vpc/latest/peering/index.html,"All inter-Region traffic is encrypted with no single point of failure, or bandwidth bottleneck. Traffic always stays on the global AWS backbone, and never traverses the public internet, which reduces threats, such as common exploits, and DDoS attacks. Inter-Region VPC peering provides a simple and cost-effective way to share resources between regions or replicate data for geographic redundancy. ^^Pricing for a VPC peering connection^^ There is no charge to create a VPC peering connection. All data transfer over a VPC Peering connection that stays within an Availability Zone (AZ) is free. Charges apply for data transfer over a VPC Peering connections that cross Availability Zones and Regions. For more information, see Amazon EC2 Pricing."
AWS \ Amazon VPC \ Traffic Mirroring \ What is Traffic Mirroring?,https://docs.aws.amazon.com/vpc/latest/mirroring/index.html,"^^^What is Traffic Mirroring?^^^ Traffic Mirroring is an Amazon VPC feature that you can use to copy network traffic from an elastic network interface of type interface. You can then send the traffic to out-of-band security and monitoring appliances for: Content inspection. Threat monitoring. Troubleshooting. The security and monitoring appliances can be deployed as individual instances, or as a fleet of instances behind either a Network Load Balancer or a Gateway Load Balancer with a UDP listener. Traffic Mirroring supports filters and packet truncation, so that you can extract only the traffic of interest, using the monitoring tools of your choice. ^^Traffic Mirroring concepts^^ The following are the key concepts for Traffic Mirroring: Source — The network interface to monitor. Filter — A set of rules that defines the traffic that is mirrored. Target — The destination for mirrored traffic. Session — Establishes a relationship between a source, a filter, and a target. ^^Work with Traffic Mirroring^^"
AWS \ Amazon VPC \ Traffic Mirroring \ What is Traffic Mirroring?,https://docs.aws.amazon.com/vpc/latest/mirroring/index.html,"You can create, access, and manage your traffic mirror resources using any of the following: AWS Management Console— Provides a web interface that you can use to access your traffic mirror resources. AWS Command Line Interface (AWS CLI) — Provides commands for a broad set of AWS services, including Amazon VPC. The AWS CLI is supported on Windows, macOS, and Linux. For more information, see AWS Command Line Interface. AWS SDKs — Provide language-specific APIs. The AWS SDKs take care of many of the connection details, such as calculating signatures, handling request retries, and handling errors. For more information, see AWS SDKs. Query API— Provides low-level API actions that you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC. However, it requires that your application handle low-level details such as generating the hash to sign the request and handling errors. For more information, see Amazon VPC actions in the Amazon EC2 API Reference."
AWS \ Amazon VPC \ Traffic Mirroring \ What is Traffic Mirroring?,https://docs.aws.amazon.com/vpc/latest/mirroring/index.html,"^^Traffic Mirroring benefits^^ Traffic Mirroring offers the following benefits: Simplified operation — Mirror any range of your VPC traffic without having to manage packet forwarding agents on your EC2 instances. Enhanced security — Capture packets at the elastic network interface, which cannot be disabled or tampered with from a user space. Increased monitoring options — Send your mirrored traffic to any security device. ^^Pricing^^ You are charged on an hourly basis for each active traffic mirror session. You'll continue to be charged for Traffic Mirroring until you delete all active traffic mirror sessions. For example, you'll still be charged in the following scenarios: You detached the network interface from the mirror source. You stopped or terminated the mirror source. You changed the instance type of the mirror source to an unsupported instance type. For the steps to delete a traffic mirror session, see Delete a traffic mirror session. For information about pricing for Traffic Mirroring, see Network Analysis on the Amazon VPC pricing page."
AWS \ Amazon EC2 \ API Reference \ Actions by service \ Amazon VPC actions,https://docs.aws.amazon.com/AWSEC2/latest/APIReference/OperationList-query-vpc.html,"^^^Amazon VPC actions^^^ The following API actions are available for Amazon VPC. To learn more about Amazon VPC, see the Amazon VPC product page and the Amazon VPC documentation. AssociateDhcpOptions. CreateDhcpOptions. DeleteDhcpOptions. DescribeDhcpOptions. AssignIpv6Addresses. AssignPrivateIpAddresses. AttachNetworkInterface. CreateNetworkInterface. CreateNetworkInterfacePermission. DeleteNetworkInterface. DeleteNetworkInterfacePermission. DescribeNetworkInterfaceAttribute. DescribeNetworkInterfacePermissions. DescribeNetworkInterfaces. DetachNetworkInterface. ModifyNetworkInterfaceAttribute. ResetNetworkInterfaceAttribute. UnassignIpv6Addresses. UnassignPrivateIpAddresses. AttachInternetGateway. CreateEgressOnlyInternetGateway. CreateInternetGateway. DeleteEgressOnlyInternetGateway. DeleteInternetGateway. DescribeEgressOnlyInternetGateways. DescribeInternetGateways. DetachInternetGateway. CreateManagedPrefixList. DeleteManagedPrefixList. DescribeManagedPrefixLists. DescribePrefixLists."
AWS \ Amazon EC2 \ API Reference \ Actions by service \ Amazon VPC actions,https://docs.aws.amazon.com/AWSEC2/latest/APIReference/OperationList-query-vpc.html,GetManagedPrefixListAssociations. GetManagedPrefixListEntries. ModifyManagedPrefixList. RestoreManagedPrefixListVersion. CreateNatGateway. DeleteNatGateway. DescribeNatGateways. CreateNetworkAcl. CreateNetworkAclEntry. DeleteNetworkAcl. DeleteNetworkAclEntry. DescribeNetworkAcls. ReplaceNetworkAclAssociation. ReplaceNetworkAclEntry. AssociateRouteTable. CreateRoute. CreateRouteTable. DeleteRoute. DeleteRouteTable. DescribeRouteTables. DisassociateRouteTable. ReplaceRoute. ReplaceRouteTableAssociation. AuthorizeSecurityGroupEgress. AuthorizeSecurityGroupIngress. CreateSecurityGroup. DeleteSecurityGroup. DescribeSecurityGroupReferences. DescribeSecurityGroups. DescribeStaleSecurityGroups. ModifySecurityGroupRules. RevokeSecurityGroupEgress. RevokeSecurityGroupIngress. UpdateSecurityGroupRuleDescriptionsEgress. UpdateSecurityGroupRuleDescriptionsIngress. AssociateSubnetCidrBlock. CreateDefaultSubnet. CreateSubnet.
AWS \ Amazon EC2 \ API Reference \ Actions by service \ Amazon VPC actions,https://docs.aws.amazon.com/AWSEC2/latest/APIReference/OperationList-query-vpc.html,CreateSubnetCidrReservation. DeleteSubnet. DeleteSubnetCidrReservation. DescribeSubnets. DisassociateSubnetCidrBlock. GetSubnetCidrReservations. ModifySubnetAttribute. CreateTrafficMirrorFilter. CreateTrafficMirrorFilterRule. CreateTrafficMirrorSession. CreateTrafficMirrorTarget. DeleteTrafficMirrorFilter. DeleteTrafficMirrorFilterRule. DeleteTrafficMirrorSession. DeleteTrafficMirrorTarget. DescribeTrafficMirrorFilters. DescribeTrafficMirrorSessions. DescribeTrafficMirrorTargets. ModifyTrafficMirrorFilterNetworkServices. ModifyTrafficMirrorFilterRule. ModifyTrafficMirrorSession. AssociateVpcCidrBlock. CreateDefaultVpc. CreateVpc. DeleteVpc. DescribeVpcAttribute. DescribeVpcs. DisassociateVpcCidrBlock. ModifyVpcAttribute. ModifyVpcTenancy. CreateFlowLogs. DeleteFlowLogs. DescribeFlowLogs. GetFlowLogsIntegrationTemplate. AcceptVpcPeeringConnection.CreateVpcPeeringConnection. DeleteVpcPeeringConnection. DescribeVpcPeeringConnections. ModifyVpcPeeringConnectionOptions. RejectVpcPeeringConnection.
Choosing an AWS machine learning service,https://aws.amazon.com/getting-started/decision-guides/machine-learning-on-aws-how-to-choose/,"^^^Choosing an AWS machine learning service^^^ ^Pick the right AI and ML services, frameworks, and foundation models to support your work^ ^^Introduction^^ 25 minutes. At its most basic, machine learning (ML) is designed to provide digital tools and services to learn from data, identify patterns, make predictions, and then act on those predictions. Almost all artificial intelligence (AI) systems today are created using ML. ML uses large amounts of data to create and validate decision logic. This decision logic forms the basis of the AI ""model"".

A fast-growing subset of machine learning is generative AI, which is powered by large models that are pretrained on a vast set of data - commonly referred to as foundation models (FMs) AWS services based on generative AI include: Help determine which AWS ML services are the best fit for your needs. Beginner. July 26, 2023"
Choosing an AWS machine learning service,https://aws.amazon.com/getting-started/decision-guides/machine-learning-on-aws-how-to-choose/,"Amazon Bedrock
Amazon CodeWhisperer
Amazon Comprehend
Amazon Textract
Amazon Translate
Amazon Lex
Amazon Polly
Amazon Transcribe
Amazon Rekognition
Amazon SageMaker. This decision guide will help you ask the right questions, evaluate your criteria, and determine which services are the best fit for your needs. Analytics
Application integration
Containers
Databases
Development strategy
Storage. In less than two minutes, Dr. Werner Vogels, Amazon CTO explains how generative AI works and how you might use it. This video is part of a longer discussion between Dr. Vogels and Swami Sivasubramanian, AWS vice-president of database, analytics, and ML, about the broad landscape of generative AI, why it’s not hype, and how AWS is democratizing access to large language and foundation models. ^^Understand^^ ^^Consider^^ When solving a business problem with AWS ML services, consideration of several key criteria can help ensure success."
Choosing an AWS machine learning service,https://aws.amazon.com/getting-started/decision-guides/machine-learning-on-aws-how-to-choose/,"The following section outlines some of the key criteria to consider when choosing a ML service. The first step in the ML lifecycle is to frame the business problem. Understanding the problem you are trying to solve is essential for choosing the right AWS ML service, as different services are designed to address different problems. It is also important to determine whether ML is the best fit for your business problem. Once you have determined that ML is the best fit, you can start by choosing choosing from among a range of purpose-built AWS AI services (in areas such as speech, vision and documents) Amazon SageMaker provides fully managed infrastructure if you need to build and train your own models. AWS offers an array of advanced ML frameworks and infrastructure choices for the cases where you require highly customized and specialized ML models. AWS also offers a broad set of popular foundation models for building new applications with generative AI. ^^Choose^^"
Choosing an AWS machine learning service,https://aws.amazon.com/getting-started/decision-guides/machine-learning-on-aws-how-to-choose/,"Now that you know the criteria by which you will be evaluating your ML service options, you are ready to choose which AWS ML service is right for your organizational needs.

The following table highlights which ML services are optimized for which circumstances. Use it to help determine the AWS ML service that is the best fit for your use case. ^^Use^^ Now that you have learned about the criteria you need to apply in choosing an AWS ML service, we hope you have been able to select which AWS AI/ML service(s) are optimized for your organizational needs. To explore how to use and learn more about your chosen service, we have provided three sets of pathways to explore how each service works. The first set of pathways provides in-depth documentation, hands-on tutorials, and resources to get started with Amazon Comprehend, Amazon Textract, Amazon Translate, Amazon Lex, Amazon Polly, Amazon Rekognition, and Amazon Transcribe. Get started with Amazon Comprehend."
Choosing an AWS machine learning service,https://aws.amazon.com/getting-started/decision-guides/machine-learning-on-aws-how-to-choose/,"Analyze insights in text with Amazon Comprehend. Amazon Comprehend Pricing

This short guide provides information on Amazon Comprehend pricing, along with examples. This exercise uses the Amazon Comprehend console to create and run an asynchronous entity detection job. It assumes that you are familiar with Amazon Simple Storage Service (Amazon S3).

Do the exercise » In this step-by-step tutorial, you learn how to use Amazon Comprehend to analyze and derive insights from text. In this scenario, you’re planning a trip and want to find helpful travel books. Get pricing guidance » Use the tutorial » The second set of AI/ML AWS service pathways provide in-depth documentation, hands-on tutorials, and resources to get started with the services in the Amazon SageMaker family. How Amazon SageMaker works

This guide provides an overview of machine learning and explains how SageMaker works. Getting started with Amazon SageMaker

Use this guide to setup SageMaker."
Choosing an AWS machine learning service,https://aws.amazon.com/getting-started/decision-guides/machine-learning-on-aws-how-to-choose/,"It will show you how to join an Amazon SageMaker Domain, giving you access to Amazon SageMaker Studio and RStudio on SageMaker. Read the guide >> Use Apache Spark with Amazon SageMaker

This guide is for developers who want to use Apache Spark for preprocessing data and SageMaker for model training and hosting. Read the guide >> Read the guide >> Use Docker containers to build models

Amazon SageMaker makes extensive use of Docker containers for build and runtime tasks. It provides pre-built Docker images for its built-in algorithms and the supported deep learning frameworks used for training and inference. This guide show how to deploy these containers. Read the guide >> Machine learning frameworks and languages

You can use Python and R natively in Amazon SageMaker notebook kernels. There are also kernels that support specific frameworks. This guide explores how to get started with SageMaker using the Amazon SageMaker Python SDK. Read the guide >>"
Choosing an AWS machine learning service,https://aws.amazon.com/getting-started/decision-guides/machine-learning-on-aws-how-to-choose/,"The third set of AI/ML AWS service pathways provide in-depth documentation, hands-on tutorials, and resources to get started with Amazon Bedrock, Amazon CodeWhisperer, AWS Trainium, AWS Inferentia, and Amazon Titan. Overview of Amazon Bedrock. Announcing new tools for building with generative AI on AWS. Demystifying generative AI. In this video, Dr. Werner Vogels, Amazon CTO and Swami Sivasubramanian, AWS VP of database, analytics, and ML, sit down to discuss the broad landscape of generative AI, why it’s not hype, and how AWS is democratizing access to large language and foundation models. Amazon Bedrock is a fully managed service that makes foundation models from leading AI startups and Amazon available via an API, so you can choose from a wide range of FMs to find the model that's best suited for your use case. The overview provides details how and when it can be used."
Choosing an AWS machine learning service,https://aws.amazon.com/getting-started/decision-guides/machine-learning-on-aws-how-to-choose/,"This blog post provides background on the development of Amazon Bedrock, how it fits with the broader AWS approach to AI and ML - and provides an overview of potential uses for AWS generative AI services. Read the blog » Watch the video » Read the overview » ^^Explore^^ Explore whitepapers to help you get started and learn best practices in choosing and using AI/ML services. Explore vetted solutions and architectural guidance for common use cases for AI and ML services. These reference architecture diagrams show examples of AWS AI and ML services in use. Explore architecture diagrams » Explore solutions » Explore whitepapers » ^Learn About AWS^ ^Resources for AWS^ ^Developers on AWS^ ^Help^"
Choosing an AWS container service,https://aws.amazon.com/getting-started/decision-guides/containers-on-aws-how-to-choose/,"^^^Choosing an AWS container service^^^ ^Taking the first step^ 20 minutes. ^^Introduction^^ Containers are a key component of modern app development. They have become the standard way to organize compute resources, and manage the content of your application deployments.

Containers provide a discrete reproducible compute environment. They also provide a way to simplify packaging and dependency management. From the orchestration of very large multi-cluster estates to web applications - or even testing your work and doing a proof of concept on your laptop - they are a great way to get started and build software to deploy in the cloud. Help determine which AWS container service is the best fit for your organization. Beginner. April 26, 2023 Amazon EC2
Amazon ECR
Amazon ECS
Amazon EKS
Amazon Lightsail
AWS App Runner
AWS Elastic Beanstalk
AWS Fargate
Red Hat OpenShift Service on AWS."
Choosing an AWS container service,https://aws.amazon.com/getting-started/decision-guides/containers-on-aws-how-to-choose/,"This decision guide helps you get started and choose the right AWS container service for your modern app development. Analytics
Application integration
Databases
Development strategy
Machine learning
Storage. This four-minute excerpt is from a 57 minute recording of a presentation by Vikram Venkataraman, a principal technical account manager at AWS, given at AWS Summit DC 2022 It provides an overview of available AWS container services. ^^Understand^^ Containers have become a de facto standard for packaging application code, configurations, and dependencies into a single artifact, because they can be deployed in a consistent manner to multiple environments.

Containers are a key piece of any modern application development strategy. To provide some context for container-related AWS services,  the image on the right shows the available AWS container options by layer (explained more fully in this video) Capacity. Capacity refers to the underlying compute that you will deploy your container to, your central processing unit (CPU), and memory requirements."
Choosing an AWS container service,https://aws.amazon.com/getting-started/decision-guides/containers-on-aws-how-to-choose/,"Capacity is the infrastructure the container is going to run on. There are two choices for capacity for your containers on AWS: Orchestration. It is not uncommon for organizations to be running not one or a few but thousands of containers. It becomes challenging to manage such a complex environment. Orchestration services help facilitate the deployment and management of these applications. AWS offers three orchestration services: Provisioning. Provisioning provides an interface to the orchestration layer of services. Each orchestrator comes with its own complexities. Provisioning services hide this complexity and helps make it easier for you to consume the service. AWS services in this category include: ^^Consider^^ It's important to choose a container service that aligns to your application requirements and operational preferences. The following section outlines some of the key criteria to consider when choosing a container service, as well as supporting tools and services. Organizations may choose the cloud to reduce operational cost by standardizing on managed services that shift the operational burden to AWS."
Choosing an AWS container service,https://aws.amazon.com/getting-started/decision-guides/containers-on-aws-how-to-choose/,"Higher levels of abstraction allow developers and operators to focus on their own unique value-add activities, instead of undifferentiated tasks.

Building with containers on AWS uses services with higher levels of abstraction to shift the operational overhead of maintaining infrastructure to AWS. ^^Choose^^ Now that you know the criteria by which you will be evaluating your container options, you are ready to choose which AWS container service(s) may be a good fit for your organizational requirements. The following table highlights which services are optimized for which circumstances. Use the table to help determine which container service is the best fit for your organization and use case. ^^Use^^ You should now have a clear understanding of each AWS container service (and the supporting AWS tools and services) and which one might be the best fit for your organization and use case. To explore how to use and learn more about each of the available AWS container services, we have provided a pathway to explore how each of the services work."
Choosing an AWS container service,https://aws.amazon.com/getting-started/decision-guides/containers-on-aws-how-to-choose/,"The following section provides links to in-depth documentation, hands-on tutorials, and resources to get you started. Getting started with Amazon EC2

Access the complete set of Amazon EC2 technical documentation, including guides to Linux and Windows instances. VM Import/Export User Guide

Learn how to import virtual machine (VM) images from your existing virtualization environment to Amazon EC2, and then export them back. Amazon EC2 Auto Scaling with EC2 Spot Instances

Learn how to create a stateless, fault tolerant workload using Amazon EC2 Auto Scaling with launch templates to request Amazon EC2 Spot Instances. Explore the guides » Explore the guide » Get started with the tutorial » Deploy a Web Application on Amazon EC2 We walk you through creating an Amazon EC2 instance using AWS CDK, and deploying a web application on it. Explore the guide » ^Explore^ Explore whitepapers to help you get started and learn best practices. Explore vetted solutions and architectural guidance for common use cases for containers.Explore reference architecture diagrams for containers on AWS. Explore architecture diagrams » Explore whitepapers » Explore solutions » ^Learn About AWS^ ^Resources for AWS^ ^Developers on AWS^ ^Help^"
Choosing an AWS database service,https://aws.amazon.com/getting-started/decision-guides/databases-on-aws-how-to-choose/,"^^^Choosing an AWS database service^^^ ^Taking the first step^ ^^Introduction^^ 20 minutes. Amazon Web Services (AWS) offers a growing number of purpose-built database options (currently more than 15) to support diverse data models. These include relational, key-value, document, in-memory, graph, time series, wide column, and ledger databases. Help determine which AWS database(s) are the best fit for your organization. Choosing the right database or multiple databases requires you to make a series of decisions based on your organizational needs. This decision guide will help you ask the right questions, provide a clear path for implementation, and help you migrate from your existing database. Beginner. April 20, 2023 Amazon Aurora
Amazon DocumentDB
Amazon DynamoDB
Amazon ElastiCache
Amazon Keyspaces
Amazon MemoryDB
Amazon Neptune
Amazon QLDB
Amazon Redshift
Amazon RDS
Amazon Timestream."
Choosing an AWS database service,https://aws.amazon.com/getting-started/decision-guides/databases-on-aws-how-to-choose/,"This six and a half minute video from AWS developer advocate Ricardo Ferreira explains the basics of choosing an AWS database, providing a strong introduction to the concepts, criteria and choices available to you in the rest of this decision guide. Analytics
Application integration
Containers
Development strategy
Machine learning
Storage. ^^Understand^^ Databases are important backend systems used to store data for any type of app, whether it’s a small mobile app or an enterprise app with internet-scale and real-time requirements.

This decision guide is designed to help you understand the range of choices available to you, establish the criteria that make sense for you to make your database choice, provide you with detailed information on the unique properties of each database - and then allow you to dive deeper into the capabilities that each offers. What kinds of apps do people build using databases? Note: This guide focuses on databases suitable for Online Transaction Processing (OLTP) applications."
Choosing an AWS database service,https://aws.amazon.com/getting-started/decision-guides/databases-on-aws-how-to-choose/,"If you primarily need to store and analyze massive amounts of data quickly and efficiently (typically met by an online analytical processing (OLAP) application), AWS offers Amazon Redshift, a fully-managed, cloud-based data warehousing service that is designed to handle large-scale analytics workloads. There are two high-level categories of AWS OLTP databases - relational and non-relational. We'll explore all of these in detail in the Choose section of this guide. Database migration. Before deciding which database service you want to use to work with your data, you may want to spend a little time thinking about how you're going to migrate your existing database(s) The best database migration strategy helps you take full advantage of the AWS Cloud. This involves migrating your applications to use purpose-built, cloud-centered databases. It also doesn't tie you to the same database that you've been using on premises. Consider modernizing your applications and choose the databases that best suit your applications’ workflow requirements."
Choosing an AWS database service,https://aws.amazon.com/getting-started/decision-guides/databases-on-aws-how-to-choose/,"The following resources can help you with your migration strategy: In addition to having a migration strategy at the front end of your planning, you want to have ways to gain insight from your data. You can use Amazon Redshift. It's a fast, fully managed, petabyte-scale data warehouse service that you can use to efficiently analyze all your data using your existing business intelligence tools. It's optimized for datasets that range from a few hundred gigabytes to a petabyte or more. ^^Consider^^ You’re considering hosting a database on AWS. This might be to support a greenfield/pilot project as a first step in your cloud migration journey, or you might want to migrate an existing workload with as little disruption as possible. Or perhaps you would like to port your workload to managed AWS services or even refactor it to fully cloud-native. Whatever your goal, considering the right questions will make your database decision easier. Here’s a summary of the key criteria to consider."
Choosing an AWS database service,https://aws.amazon.com/getting-started/decision-guides/databases-on-aws-how-to-choose/,"The first major consideration when choosing your database is your business objective. What is the strategic direction driving your organization to change? As suggested in the 7 Rs of AWS, consider whether you want to re-architect or re-factor an existing workload, move to a new platform to shed commercial license commitments, rehost your existing databases and data to the cloud without making any changes to take advantage of cloud capabilities, or make the move now to a managed database strategy. Your business objective will also drive the degrees of freedom you have in choosing a target database in AWS for your workload. If you choose a rehost strategy, you might want to migrate the workload to AWS with as few disruptions as possible. So you might adopt a “lift and shift” strategy where, for example, you migrate an on-premises Oracle database to Oracle on an EC2 instance. ^^Choose^^"
Choosing an AWS database service,https://aws.amazon.com/getting-started/decision-guides/databases-on-aws-how-to-choose/,"Now that you know the criteria by which you will be evaluating your database options, you are ready to choose which AWS database is right for your organizational needs. This table highlights which databases are optimized for which circumstances and type of data. Use it to help determine the database that is the best fit for your use case. ^^Use^^ Now that you have learned about the shape of your data, how it fits in your environment, supports your use case, and what each database service is optimized for. You should have been able to select which AWS database service(s) is optimized for your organizational needs. To explore how to use and learn more about each of the available AWS database services - we have provided a pathway to explore how each of the services work. The following section provides links to in-depth documentation, hands-on tutorials, and resources to get you started. Getting started with Amazon Aurora

We outline the basics of getting started with Aurora."
Choosing an AWS database service,https://aws.amazon.com/getting-started/decision-guides/databases-on-aws-how-to-choose/,"This guide includes tutorials and covers more advanced Aurora concepts and procedures, such as the different kinds of endpoints and how to scale Aurora clusters up and down. Create a high-availability database

Learn how to configure an Amazon Aurora cluster to create a high-availability database. This database consists of compute nodes that are replicated across multiple Availability Zones to provide increased read scalability and failover protection. Use Amazon Aurora global databases

We help you get started using Aurora global databases. This guide outlines the supported engines and AWS Region availability for Aurora global databases with Aurora MySQL and Aurora PostgreSQL. Explore the guide » Explore the guide » Get started with the tutorial » Migrate from Amazon RDS for MySQL to Amazon Aurora MySQL
 
We show you how to migrate any application's database from Amazon RDS for MySQL to Amazon Aurora MySQL with minimal downtime. This tutorial is not within the free tier and will cost you less than $1 Create a serverless message processing application."
Choosing an AWS database service,https://aws.amazon.com/getting-started/decision-guides/databases-on-aws-how-to-choose/,"We show you how to create a serverless message processing application with Amazon Aurora Serverless (PostgreSQL-compatible edition), Data API for Aurora Serverless, AWS Lambda, and Amazon SNS. Get started with the tutorial » Get started with the tutorial » ^^Explore^^ Explore whitepapers to help you get started, learn best practices, and migrate your databases. Explore vetted solutions and architectural guidance for common use cases for databases. Explore reference architecture diagrams to help you develop, scale, and test your databases on AWS. Explore solutions » Explore whitepapers » Explore architecture diagrams » ^Additional resources^ Developers. Amazon EMR. Solution architects. Amazon Kinesis. Professional development. Amazon MSK. Startups. Amazon Quicksight. Amazon Redshift. ^Learn About AWS^ ^Resources for AWS^ ^Developers on AWS^ ^Help^"
